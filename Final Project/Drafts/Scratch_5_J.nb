(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    691527,      14289]
NotebookOptionsPosition[    683160,      14150]
NotebookOutlinePosition[    683503,      14165]
CellTagsIndexPosition[    683460,      14162]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Giulio", "Title",
 CellChangeTimes->{{3.771185874275619*^9, 
  3.771185913137411*^9}},ExpressionUUID->"414d67d3-ca72-4723-ac3f-\
3c60e3f177a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"10", ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7711003557426777`*^9, 3.7712359522038136`*^9, {3.7712365173511705`*^9, 
   3.7712365260272694`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"b77342b3-67b8-428c-8ff5-9493e741d338"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.106342338152729`", ",", "5.981173863663802`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4773716932832315`", ",", "4.7730514846078975`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.515045045490778`", ",", "4.70899276276095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.62465430535126`", ",", "2.8228699769502708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.65704641525705`", ",", "7.9407665787149`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.516390472940891`", ",", "3.148551143433604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3086829856526343`", ",", "9.968192235520835`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8200916868002128`", ",", "4.0675046927093845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.848835700478816`", ",", "5.930402495568314`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.181566276703194`", ",", "3.831618974428146`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771100356409297*^9, 3.771116049755032*^9, 
  3.7711161372091694`*^9, 3.77118574247677*^9, 3.771235669919237*^9, 
  3.771235954747344*^9, 3.771236554393118*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"4a6cc206-90a0-4cb5-b6fe-696fb6943b4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", "10"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7712371479099026`*^9, 3.771237165059171*^9}, {
   3.771237306311805*^9, 3.771237313839533*^9}, 3.7712394350239744`*^9, 
   3.771239607233056*^9},ExpressionUUID->"8fe20170-cc97-4cb3-99e1-\
1e7a9818dcc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.442816532461084`", ",", "5.225132201024085`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.933369417204663`", ",", "4.618020750081147`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.6492442174098265`", ",", "0.4670829973254911`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2344659792790189`", ",", "2.8172378824680386`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.953951821650293`", ",", "6.262355284576159`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.996220819805595`", ",", "4.677526748185581`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.04167789125612664`", ",", "7.595848936670993`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.62762939097668`", ",", "8.119390995396152`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.212821704637806`", ",", "5.992584636083734`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.215699645353205`", ",", "4.4704514571966225`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.8996336636724784`", ",", "4.573348867887807`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.12929667995271643`", ",", "3.685068547299144`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.273149139318441`", ",", "2.756488448809991`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.058917618043`", ",", "2.1718514196247973`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9804307406018395`", ",", "7.529836842381744`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.724067695964253`", ",", "3.9082699944964343`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.170663005614406`", ",", "4.8408659997332215`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.300637266608668`", ",", "0.9288755884227147`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5437509336574493`", ",", "4.073059627740005`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.4390160272173045`", ",", "2.4711051699085864`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7.857169459698749`", ",", "8.273748803720547`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.8968359541933175`", ",", "3.0102254214245043`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.807619661798096`", ",", "9.96342240732757`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.882094001274794`", ",", "0.12202532233176022`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.29265281497236`", ",", "9.732499038034817`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.9692725657673193`", ",", "4.464902215951884`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8823589987443441`", ",", "8.36328099548939`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.447395969406621`", ",", "0.6908318496821426`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.7521502214725277`", ",", "4.501979797441278`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.7829012318274824`", ",", "2.4188926396230404`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8.168698037508637`", ",", "0.3093691301140673`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.497283427993761`", ",", "9.360259015721638`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0764363945843414`", ",", "9.368549237283943`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.528047197371084`", ",", "3.89544311369`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.718638733838285`", ",", "3.207555659873581`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.430102277482721`", ",", "6.26162511816127`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.446622155804228`", ",", "4.89232086279743`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.876468680640428`", ",", "3.777624298228723`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.63874813517349`", ",", "6.622529474273584`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.5319486773092805`", ",", "1.3619983477246222`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.70922715218312`", ",", "1.773971468093654`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.310594169683636`", ",", "1.033752002418991`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.078020377928453`", ",", "2.0543230797937646`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.300650000117313`", ",", "7.279476338907358`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.246345029835819`", ",", "0.5038394856000714`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.604460391943412`", ",", "7.745296145551986`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.48162093579267`", ",", "8.129817113333246`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.5503636740121145`", ",", "3.6318659919525604`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.004610574014325`", ",", "4.903123105893334`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.5427740507805403`", ",", "6.927897113377824`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6.476822229802277`", ",", "5.517011387989655`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.6625175200987385`", ",", "8.75358802003321`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.923296559491371`", ",", "4.396090671822602`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.603985872016846`", ",", "6.259600295193735`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.140057846552359`", ",", "0.7907673669674828`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.300270598841561`", ",", "4.12292980284089`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09351794874978481`", ",", "1.0896440746629548`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"5.525755470555541`", ",", "9.704616629863022`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.712122446813385`", ",", "9.860727919747053`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.3517454220923355`", ",", "8.594853332768182`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6.113909578050013`", ",", "0.9437320537184775`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0492692487291286`", ",", "8.069022386477766`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.114894098427406`", ",", "6.62952658493187`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.346627786133915`", ",", "9.908048193059177`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.939609119409553`", ",", "7.448660162424783`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.8138947847892`", ",", "8.183705223873417`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.170222790522093`", ",", "3.0505983181696372`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.69291759166728`", ",", "6.100096283653144`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.674693412689027`", ",", "2.600318009737988`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.308809703873234`", ",", "8.099165848402471`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8.381962977947392`", ",", "6.173815157841769`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.1190377642160545`", ",", "2.6945487662636776`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.808091725676739`", ",", "1.311771265994448`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.59342599950973`", ",", "8.582903942772347`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6341129982359561`", ",", "9.204479459332994`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.7501373653068875`", ",", "9.636495652205522`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.338286348595096`", ",", "9.654685269230534`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.530726805464983`", ",", "9.73616699829751`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.805746447362868`", ",", "2.2105482433952766`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.602243270580301`", ",", "9.902830622545597`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6.00340530175756`", ",", "2.406330370630803`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.2693888573544445`", ",", "9.795043996259217`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.119075351951562`", ",", "1.2058021071875409`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.014665382238547`", ",", "7.545581966544816`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.326612827002519`", ",", "5.865568883493598`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.771832251599143`", ",", "6.044444886977388`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.2724239355778693`", ",", "6.374964488201233`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.6420798293660397`", ",", "1.125346860261395`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.780340219964152`", ",", "1.2364908560183068`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.145783226458228`", ",", "4.292853559442166`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9.687275863338126`", ",", "2.8637441680448887`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.465215077293152`", ",", "9.561241220581987`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.536676210801591`", ",", "6.994699468955332`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.209505545165026`", ",", "0.32102149102657407`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.3153126684924885`", ",", "2.348688226174982`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.762011724274245`", ",", "6.612865262767613`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.208656299419793`", ",", "6.737233073955004`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.832537110530314`", ",", "7.825400713821395`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.998631372125303`", ",", "6.013915029133273`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.328811946871557`", ",", "1.9885684715482235`"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771237167584719*^9, 3.7712373162241697`*^9, 
  3.771237651176828*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"82f62b6f-f699-4cd8-9a04-44f4c56c3594"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageNum", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Part", "[", 
   RowBox[{"Rlist", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771237202781727*^9, 3.7712372283142385`*^9}, {
  3.7712373238558664`*^9, 3.7712373273388724`*^9}, {3.771237664527223*^9, 
  3.7712376816195397`*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"be0850ba-4596-4b21-a6c2-c950c6ba52fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"Part", "[", 
    RowBox[{"Rlist", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77110757404537*^9, 3.771107589516611*^9}, {
   3.77123656807239*^9, 3.7712365737850957`*^9}, 3.7712373417107067`*^9},
 CellLabel->
  "In[287]:=",ExpressionUUID->"3b47ece3-4bf4-46a7-a5a8-cc7816a1f49a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T+LFGkCx/G5u+TCewv3Li698NI9LhV2OXvvEg/cg+HCjnwFRlKBqYEg
YmeCfxIDoTFSZBIZsOUMREQEk9nq7emyRnt25jftbD3l8/kwajtDyVNd5bef
ruqi/vzDf76b/H5nZ+enP7a/fff97l8vX/7+f3//U/uXf1z66d8/Xrr4z79d
+u/FHy9e/ssPf2i/+f/2179+t7OzfHxwvMlk8is/BfiSbgAp3QBSugGkdANI
TdaGHggwGooBpHQDSOkGkNINIHWGbrx8/e7mved7+2/OYzxA+dJuvFi8vTC9
s/p6MN8/p1EBJUu7ce3Wk64bV64/OqdRASVLu/H46auuG+27lXMaFVCyMxzf
uP1wb/fq/Rt3n73/8PE8hgQUzvkUIKUbQMr1KUBKMYCUbgAp3QBSugGkdANI
6QaQ0g3gOPNm9TGN6Wxx5Pu6AWzWVmMVjO7Bmm4Amy1m064bzbz/E90AjrV6
o/L52xTdADZrpxuH04xPjw5NjhpogEBxurcpX75R0QrgGMt5xsrRwxu6AcR0
A0jpBpDSDSClG0BKN4CUbgAp3QBSugGkfMIcSCkGkNINIKUbQEo3gJRuACnd
AFK6AaR0A0jpBpDSDSClG0DK9SlASjGAlG4AKd3gOC9fv7t57/ne/puhB0Jx
dIONXizeXpjeWX09mO8PPRzKohvFGvbl/tqtJ103rlx/NMgYKJZulGnwl/vH
T191A2jz9dsPgJLpRplKeLm//XBv9+r9G3efvf/wcZABUCzdKJOXe0qmG8Xy
ck+xdANI6QaQcn0KkFIMIKUbQEo3gJRuACndAFK6AaR0AzjOYjY9/KBGM+9/
XzeAzeZNl4vewyXdADZqJxtN05hvAKfXzjG6XCwbYr4BnORIK+bNdLbofjQ5
apDhASXqHdQw3wBOqTuf0p9sHOgGkNMNIKUbQEo3gJRuACndAFK6AaR0A0jp
BpDyCXMgpRhASjegWi9fv7t57/ne/pt0Qd2AOr1YvL0wvbP6ejDfj5bVDajT
tVtPum5cuf4oWlY3OI0zT2gp1uOnr7putBs3WlY3ONE2E1pKdvvh3u7V+zfu
Pnv/4WO0oG5wom0mtHyTdIMTbTOh5ZukG5zGmSe0fJN0A0jpBpByfQqQUgwg
pRtASjeAlG4AKd0AUroBpHQDSOkGkNINIKUbQEo3gJTrU4CUYgAp3QBSugGk
dANI6QaQ0g0gpRuUxr3hSrOYTaezRf87ukFR3BuuOPOmrYRuUDL3hivLaqox
b3SDkrk3XEnaqUYz/+VP3aBw7g1XiHauMenpp2Ny1ICDBAplvgGkdAPYmm4A
Kd0AUroBpHQDSOkGkNINIKUbQEo3gJRPmAMpxQBSugGkdANI6QaQ0g0gpRtA
SjcogXsfjItuMDj3Phgd3WBw7n0wOrrB4Nz7YHR0gxJsvPeBgx7Fcn0KZXLQ
o2SKQZkc9CiZblAmBz1KphsUyw0fi6UbQEo3gJRuAKnxdsPJfRjKSLvh5D4M
aKTdcHIfBjTSbji5DwMaaTcOnNyH4bg+BUgpBpDSDSClG0BKN4CUbgAp3QBS
ugEcYzGbrj+oMZ0tej/QDWCzeTNp5l88XNIN4ETtzEM3gMBnsw3dAH5V24zP
onHQuz7FVSrAUcvjol80Y0krgI2WM42e/hkV3QBSugGkdANI6QaQ0g0gpRtA
SjeAlG4AKd0AUj5hDqQUA0jpBpDSDSClG0BKN4CUbgAp3QBSugGkdANI6QaQ
0g0g5foUIKUYQEo3gJRuACndAFK6AaR0A0jpBpDSDSClG0BKN4CUbgAp16cA
qTqL8fL1u5v3nu/tvxl6IDBKFXbjxeLthemd1deD+f7Qw4HxqbAb12496bpx
5fqjoYcD41NhNx4/fdV1o323MvRwYHwq7Ebr9sO93av3b9x99v7Dx6HHAuNT
ZzeAbegGkKq5GzWv+0Hdq1/zuh98jdXf8l8YdvEtDb7zjPrJr3nxwQ2++qPe
fJ49i49x8cEHUPn4PXsWH+Pigw8gWnwCcDrnGi6gQroBpHQDSOkGwCksZtP1
0Z/pbDH0aAbRPgV1rvqnbd/Mhx7Lb23e1L3Tb6l9+tb7TO9hTX7ZgWrce2re
9O0KrzZ594Czal996tp5DtZTjXlT4b6z3NxNU+l8o5tiVlfMr63GJ3C9zlV2
YznPWm/xGl8yVm9UKtzwX09/F6pH78hOjXvQkVZUVs7lpl+t/KdHRDxx1f2v
OdSbYdY23+gdCa9xnr299VHlSl9zD9XZjd6Mq77Vr/lUEgAAAADAqfwMK8tA
aQ==
    "], {{0, 234}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 234},
  PlotRange->{{0, 360}, {0, 234}}]], "Output",
 CellChangeTimes->{{3.771107580569684*^9, 3.7711075900992484`*^9}, 
   3.7711160539688263`*^9, 3.771116141919985*^9, 3.771116220904458*^9, 
   3.771235672698642*^9, 3.771235962414986*^9, 3.7712365579311075`*^9, 
   3.7712373433567486`*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"f6b4d7d8-d12d-4130-ad25-e057e3ae55c7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Rasterize", "[", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}], "]"}], ",", 
    "n"}], "]"}]}]], "Input",
 CellLabel->
  "In[279]:=",ExpressionUUID->"c62ea07c-ad59-43a0-9cc0-9054ac01a0b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "[", "10", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7712366273726387`*^9, 3.7712366311584873`*^9}, 
   3.771236849804281*^9},ExpressionUUID->"e099c19a-b4d7-480c-8837-\
f9c6155ac897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"plots", "[", "10", "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7712368524018364`*^9, 3.7712368702406673`*^9}, {
  3.7712370571404886`*^9, 3.7712370572014766`*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"9324b2b3-bf1e-4839-9477-9ab1a5bd3957"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
09h3ZEJTQ6eGgVM5PgAAAABr/wcphoxc
    "], {{0, 232}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 232},
  PlotRange->{{0, 360}, {0, 232}}]], "Output",
 CellChangeTimes->{3.771236634739467*^9, 3.771236873269945*^9, 
  3.771237060472595*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"3af3040c-f3a7-43ce-8447-62961c0b0e93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageNum", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Part", "[", 
   RowBox[{"Rlist", ",", "n"}], "]"}]}]], "Input",ExpressionUUID->"a176d516-\
1bcd-430e-b6e7-30949896ebfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"axes", "=", 
   RowBox[{"AlphaChannel", "[", 
    RowBox[{"Rasterize", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", "Transparent"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7711003476922507`*^9, {3.77110037940926*^9, 3.7711003816569576`*^9}, 
   3.771237367014305*^9, 3.7712375437968664`*^9, {3.771237715698148*^9, 
   3.7712377330802927`*^9}, 3.7712383693003526`*^9, {3.771238412831644*^9, 
   3.771238425099641*^9}, {3.771238487979573*^9, 3.771238493956184*^9}, {
   3.7712385576879864`*^9, 3.7712385881736617`*^9}},
 CellLabel->"",ExpressionUUID->"0d46dec9-a437-4c86-9be6-4f10cbcd08e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Binarize", "[", 
   RowBox[{
    RowBox[{"AlphaChannel", "[", 
     RowBox[{"Rasterize", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
       ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", "0"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7712373740133266`*^9, 3.77123754095848*^9, 3.7712380742962985`*^9, 
   3.771238372617498*^9, {3.771238537327535*^9, 3.7712385389586315`*^9}, {
   3.7712387109787507`*^9, 
   3.7712387126817904`*^9}},ExpressionUUID->"c458672b-42e1-4d43-a95a-\
a907f05eb7f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"ImageDifference", "[", 
    RowBox[{
     RowBox[{"Binarize", "[", 
      RowBox[{
       RowBox[{"AlphaChannel", "[", 
        RowBox[{"Rasterize", "[", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
          ",", 
          RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", 
       "0"}], "]"}], ",", "\[IndentingNewLine]", "axes"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7711012375260324`*^9, 3.7712373827004213`*^9, 3.771237538621777*^9, 
   3.7712380825935764`*^9, 3.771238376463312*^9, {3.7712385990394864`*^9, 
   3.7712386044064054`*^9}},ExpressionUUID->"5f5f4a57-4053-43d3-8ea2-\
7fa7984d2ef3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"AlphaChannel", "[", 
    RowBox[{"Rasterize", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7711013852701993`*^9, 3.771237390987706*^9, 
  3.771237534650036*^9, 3.7712380862764807`*^9, 
  3.7712383793346806`*^9},ExpressionUUID->"f88589b5-30c0-4db7-b385-\
d1b319ce0b9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageSubtract", "[", 
   RowBox[{"labels", ",", "data"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.771237532027525*^9},
 CellLabel->
  "In[302]:=",ExpressionUUID->"9b9d0174-b999-4145-be88-5bf2ee0888d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageSubtract", "[", 
   RowBox[{"axes", ",", "data"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.771237528117778*^9},
 CellLabel->
  "In[303]:=",ExpressionUUID->"1694d014-26da-4360-9367-b2068eda6747"],

Cell[BoxData[
 RowBox[{
  RowBox[{"background", "=", 
   RowBox[{"ColorNegate", "[", 
    RowBox[{"ImageAdd", "[", 
     RowBox[{
      RowBox[{"AlphaChannel", "[", 
       RowBox[{"Rasterize", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Transparent"}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
         ",", 
         RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", 
      RowBox[{"ImageDifference", "[", 
       RowBox[{
        RowBox[{"Binarize", "[", 
         RowBox[{
          RowBox[{"AlphaChannel", "[", 
           RowBox[{"Rasterize", "[", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
              "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", 
          "0"}], "]"}], ",", "\[IndentingNewLine]", "axes"}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"AlphaChannel", "[", 
       RowBox[{"Rasterize", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
           RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
         ",", 
         RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7711017587772026`*^9, 3.771237525252406*^9, {3.7712392172977123`*^9, 
   3.7712392355163374`*^9}},ExpressionUUID->"b9cfbbbf-3c53-40c7-bad7-\
1a5d95b7e3d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetConponents", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"ImageMultiply", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorNegate", "[", 
           RowBox[{"ImageAdd", "[", 
            RowBox[{
             RowBox[{"AlphaChannel", "[", 
              RowBox[{"Rasterize", "[", 
               RowBox[{
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"Part", "[", 
                   RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", "Transparent"}], ",", 
                  RowBox[{"BaseStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
                 "]"}], ",", 
                RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"ImageDifference", "[", 
              RowBox[{
               RowBox[{"Binarize", "[", 
                RowBox[{
                 RowBox[{"AlphaChannel", "[", 
                  RowBox[{"Rasterize", "[", 
                   RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}],
                  ",", "0"}], "]"}], ",", "\[IndentingNewLine]", "axes"}], 
              "\[IndentingNewLine]", "]"}], ",", 
             RowBox[{"AlphaChannel", "[", 
              RowBox[{"Rasterize", "[", 
               RowBox[{
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"Part", "[", 
                   RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
                  RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
                  RowBox[{"BaseStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
                 "]"}], ",", 
                RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"AlphaChannel", "[", 
           RowBox[{"Rasterize", "[", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", "Transparent"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
              "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", 
          RowBox[{"ImageDifference", "[", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{
              RowBox[{"AlphaChannel", "[", 
               RowBox[{"Rasterize", "[", 
                RowBox[{
                 RowBox[{"ListPlot", "[", 
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
                   RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
                  "]"}], ",", 
                 RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], 
              ",", "0"}], "]"}], ",", "\[IndentingNewLine]", "axes"}], 
           "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"AlphaChannel", "[", 
           RowBox[{"Rasterize", "[", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{"Rlist", ",", "n"}], "]"}], ",", 
               RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], 
              "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
         "}"}], ",", "\"\<Real32\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7712375217933607`*^9, 3.7712375718559217`*^9, 3.7712389972792025`*^9, 
   3.771239028539459*^9, {3.7712392465310864`*^9, 3.7712393274890738`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"e2a74a9a-bee6-4641-99bd-f0dd93609935"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"segmentation", "=", 
    RowBox[{
     RowBox[{"ImageData", "[", 
      RowBox[{"ImageAdd", "@@", 
       RowBox[{"MapThread", "[", 
        RowBox[{"ImageMultiply", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Image", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"background", ",", "axes", ",", "labels", ",", "data"}],
               "}"}], ",", "\"\<Real32\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
        "]"}]}], "]"}], "//", "Round"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.771101923986755*^9, {3.7712379225200014`*^9, 
   3.771237924849658*^9}},ExpressionUUID->"5a29629d-1874-4a8a-8f7e-\
259fd9ecfbee"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0"}], "}"}], ",", 
           TemplateBox[{"233"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 296, 20817782642356972625, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 296, 20817782642356972625, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 296, 20817782642356972625, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20817782642356972625 === $SessionID, 
   Out[296], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.77110192491021*^9, 3.771116093783924*^9, 
  3.7711161695291557`*^9, 3.7711162454303823`*^9, 3.771236024880506*^9, 
  3.771237417456722*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"516af9d9-8fb3-4018-8058-a9503a819bda"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{"f", ",", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}]}], "|>"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7712363546684914`*^9, 
  3.771236354675456*^9}},ExpressionUUID->"ba544e41-d328-4eeb-8010-\
a73a8cd135f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MorphologicalComponents", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3b0JwmAYhdFoIa7hCrrA6wo6QQTFIiBoIa7rJGr5NRYieCXnwA2E9E8R
8rPYnTaHadd1l/nzsOmv6/O5v21nr5N9P6yWw+vi/bnjpAMAAAAAAAAAAAAA
AAAA/kpVOwAy6DNAJn0GyKTPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAjEFVOwAy6DNAJn0GyKTPAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMWVU7ADLoM0AmfQbI
pM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfKqqHQAZ
9Bkgkz4DZNJnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiPqnYA
ZNBngEz6DJBJnwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMvnPFEAmfQbI
pM8AmfQZAAAAAAAAAAAAAAAAAAAAAAAA4L/4jhxAJn0GyKTPAJn0GQAAAAAA
AAAAAAAAAAAAGBvvWQNk0meATPoMkEmfAQAAAAAAAAAASOY5N4BM+gyQSZ8B
MukzAAAA8C3uMwBk0meA937VSX0GeE+fATLpJEAmfQYAAAAAAAAAAAAAAAAA
AAAAAAAAAAByPACf7GFM
     "], {{0, 226}, {360, 0}}, {0., 1.},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{360, 226},
   PlotRange->{{0, 360}, {0, 226}}], "]"}]], "Input",
 CellChangeTimes->{{3.771107131735447*^9, 3.771107166683608*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"2bae5711-2426-4d96-a341-263dc2f860ce"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0"}], "}"}], ",", 
           TemplateBox[{"224"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0"}], "}"}]}], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 269, 20817782642356972625, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 269, 20817782642356972625, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 269, 20817782642356972625, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20817782642356972625 === $SessionID, 
   Out[269], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771236040783453*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"fa6a7fc3-c884-4f9c-81f8-5012ae28697e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
   "Evaluate", " ", "this", " ", "cell", " ", "to", " ", "copy", " ", "the", 
    " ", "example", " ", "input", " ", "from", " ", "a", " ", "cloud", " ", 
    "object"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7711071154097247`*^9, 
  3.771107121498265*^9}},ExpressionUUID->"d226fddb-fcf1-4ff5-bcc8-\
7211e14b319e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComponentMeasurements", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3b0JwmAYhdFoIa7hCrrA6wo6QQTFIiBoIa7rJGr5NRYieCXnwA2E9E8R
8rPYnTaHadd1l/nzsOmv6/O5v21nr5N9P6yWw+vi/bnjpAMAAAAAAAAAAAAA
AAAA/kpVOwAy6DNAJn0GyKTPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAjEFVOwAy6DNAJn0GyKTPAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMWVU7ADLoM0AmfQbI
pM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfKqqHQAZ
9Bkgkz4DZNJnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiPqnYA
ZNBngEz6DJBJnwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMvnPFEAmfQbI
pM8AmfQZAAAAAAAAAAAAAAAAAAAAAAAA4L/4jhxAJn0GyKTPAJn0GQAAAAAA
AAAAAAAAAAAAGBvvWQNk0meATPoMkEmfAQAAAAAAAAAASOY5N4BM+gyQSZ8B
MukzAAAA8C3uMwBk0meA937VSX0GeE+fATLpJEAmfQYAAAAAAAAAAAAAAAAA
AAAAAAAAAAByPACf7GFM
      "], {{0, 226}, {360, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 226},
    PlotRange->{{0, 360}, {0, 226}}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Image\>\"", ",", "\"\<Count\>\"", ",", "\"\<Centroid\>\"", ",", 
     "\"\<StandardDeviation\>\""}], "}"}], ",", "All", ",", 
   "\"\<Dataset\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.7711073112583566`*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"5238342f-7796-4850-bb67-8872691ca94c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 11, "Length" -> 11, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{
           "Image", "Count", "Centroid", "StandardDeviation"}, {
            TypeSystem`Atom[Image], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 2], 
            TypeSystem`Atom[Real]}], 11], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Image"} -> 
           1, {All, "Count"} -> 1, {All, "Centroid"} -> 
           1, {All, "StandardDeviation"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Image" -> TypeSystem`PackageScope`AtomShape[48], "Count" -> 
               TypeSystem`PackageScope`AtomShape[34], "Centroid" -> 
               TypeSystem`PackageScope`UnknownShape, "StandardDeviation" -> 
               TypeSystem`PackageScope`AtomShape[60]]]]], 11, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1142970541], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{
           "Image", "Count", "Centroid", "StandardDeviation"}, {
            TypeSystem`Atom[Image], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 2], 
            TypeSystem`Atom[Real]}], 11], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1142970541]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1149261010][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Image\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Image\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1149261010][{All, "Image"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[All, "Image"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Count\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Count\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1149261010][{All, "Count"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[All, "Count"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Centroid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Centroid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1149261010][{All, "Centroid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[All, "Centroid"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StandardDeviation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1149261010][{All, "StandardDeviation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[All, "StandardDeviation"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[1]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{352., 215.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{352., 215.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[1], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[2]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{322., 177.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{322., 177.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[2], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[3]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{292., 144.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{292., 144.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[3], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4"], 
                    Style[
                    RawBoxes["4"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[4]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[4]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{261., 114.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{261., 114.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[4], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5"], 
                    Style[
                    RawBoxes["5"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[5]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[5]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{231., 88.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{231., 88.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[5], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6"], 
                    Style[
                    RawBoxes["6"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[6]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[6]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{201., 66.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{201., 66.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[6], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[6], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7"], 
                    Style[
                    RawBoxes["7"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[7]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[7]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{171., 49.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{171., 49.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[7], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[7], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8"], 
                    Style[
                    RawBoxes["8"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[8]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[8]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{141., 35.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{141., 35.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[8], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[8], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["9"], 
                    Style[
                    RawBoxes["9"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[9]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[9]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{111., 25.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{111., 25.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[9], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[9], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["10"], 
                    Style[
                    RawBoxes["10"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[10]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[10]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{81., 19.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{81., 19.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[10], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[10], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["11"], 
                    Style[
                    RawBoxes["11"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[11]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1149261010][
                   GeneralUtilities`Slice[
                    Key[11]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[
                    RawArray["Real32",{{1., 1., 1., 1.}, {1., 1., 1., 1.}, {
                    1., 1., 1., 1.}, {1., 1., 1., 1.}}], {{0, 4}, {4, 0}}, {
                    0., 1.}, ColorFunction -> GrayLevel], 
                    BoxForm`ImageTag[
                    "Real32", ColorSpace -> "Grayscale", Interleaving -> None,
                     Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {4, 4}, PlotRange -> {{0, 4}, {0, 4}}]}, 
                   "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[11], 
                   Key["Image"]]], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[11], 
                   Key["Count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{51., 17.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{51., 17.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][{
                    Key[11], 
                    Key["Centroid"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[11], 
                   Key["Centroid"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
                  GeneralUtilities`Slice[
                   Key[11], 
                   Key["StandardDeviation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1149261010]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1149261010][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {355., {182., 188.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.771107312577607*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"2957b452-420d-4807-8cdd-f6bc8f9b5dd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinMax", "[", "segmentation", "]"}]], "Input",
 CellLabel->
  "In[297]:=",ExpressionUUID->"1d1df914-63cd-433d-98bc-f99c48cd7b74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.771101934471428*^9, 3.7711019381223335`*^9}, 
   3.7711025352011647`*^9, 3.771106311588399*^9, 3.7711160995264764`*^9, 
   3.771116176559417*^9, 3.771116212362582*^9, 3.7711162507930574`*^9, 
   3.771236054975403*^9, 3.7712374241988053`*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"738a099b-e227-4d96-944a-fa4cbf5cb6ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Colorize", "[", "segmentation", "]"}]], "Input",
 CellLabel->
  "In[271]:=",ExpressionUUID->"ec7ede10-9fbc-4f22-82ef-0e95140614d2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U9uG2UcgGEDG5ZcgVug7FiyLWLfVpTCJkgtEuIgPUDP0TXrrMkROAVG
VkdD/ph5x22dL/M8mlaOa6k/f41fj52Z+uvnvz756fPdbvf6y/1vT579/u2r
V8/++P6r/Rc/XL7+5eXlix+/u/ztxcsXr755/sX+yr/3v37+bLf79/J9/vzr
3ZE/BbhNN4BKN4BKN4BKN4BKN4BKN4Bq341pO/cswBjkAqh0A6h0gyWevn0z
beee5eHazirpBkts5xFxiu2skm6wxHYeEafYzirpBkts5xFxiu2skm4AlW4A
lW4AlW4AlYPMgUoxNms7b/7zwenGZukGq+nGZukGq+nGZukGq+kGUOkGUOnG
BnmFwol0Y4N0g+WuLq4P2/xK3dgg3WCheS7ml3Vjg3SDhXQDWOG+1yk+CgG4
k/0NoNINYAU/TwE+CN0AKt0AKt0AKt0AKt0AKt0AKt0AKt0AKienANU+F86q
BhLdACrdACrd4DbfEhzn7VBu0w2O0w1u0w2O0w1u0w2O0w2g0g2g0g2gcpw5
UMkFUOkGUOkGUOkGUOkGUOkGUOkGUOkGUOkGUOkGUOkGUDk/BajkAqh0A6h0
A6h0A6h0A6h0A6h0Azji6uL6sM2v1A3gPvNczC/rBnCfaWfD/gawkP0NoDrS
DaeoAHeyvwGs4P0N4IPQDaDSDaDSDaDSDaDSDaDSDaDSDaDSDaBykDlQyQVQ
6QZQ6QZQ6QZQ6QZQ6QZQ6QZQ6QZQ6QZQ6QZQ6QZQOT8FqOQCqHQDqHQDqHQD
qHQDqHQDqHQDqHQDqHQDqHQDqBxkDlSKAVS6AVS6AVS6AVS6AVS6AVS6AVS6
Afyvq4vr/TZ9qRvAcYdi6Aaw0JQL3QCWmLfiRjd8FAJwp8PbGvPtcL1WAEt4
nQJUugGcQjeASjeASjeASjeASjeASjeASjeASjeAyskpQCUXQKUbQLWwG0/f
vpm2jz0S8MDpBlDpBlDpBlB5XxSodAOodAOodAOoHGcOVHIBVLoBVLoBVLoB
m7X6eE7dgM3SDaDSDaDSDeCT0Q2g0g2g0g2gcn4KUMkFUOkGUOkGUOkGUOkG
UOkGUOkGcMTVxfVhm1+pG8B95rmYX9YNYAndABKvU4DkRjR2/z0/RUOAG25H
Y2d/A7jf9MOUGz9S0Q2g0g2g0g2g0g2g0g2g0g2g+kjdWP15LsDDpxtApRtA
9ZEOMtcNeMS8LwpUugFUugFUugFUugFUugFUugFUugFUugFUugFUugFUPgQB
qOQCqHQDqHQDqHQDqHQDqHQDqHQDqHQDqHSDOf+hNEvoBnO6wRKOM2dON1hC
LpjTDZbQDaDSDaDSDaDSDaDSDaDSDaAavRvmP6+h5x96+N1Z57d052X+Mxp6
+N0I3fj0NzNYvZnB6s0MtuJmZ/yrh146g9WbGaze7EENNj8VxWaz2Y5vp7cI
YKIbQKUbQKUbAADHXV1cn3uElfaTH7ZzD7LS6PPv3t+Fc0+xxrT4g85/XuOu
23zsEe/C6PPv3o899PCsMPS/+9zod2HE+aeZBx3ezsaJRl+6oecf9Ft39J2l
0ed/CIZet6GHnwx3L+bP14OmbzL08Gc07rqNO/nuET3ljTj8o1n8Mxp03R7B
893Qw08Gnf9xLD4AAAAAwAP0D07QcUk=
    "], {{0, 234}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 234},
  PlotRange->{{0, 360}, {0, 234}}]], "Output",
 CellChangeTimes->{{3.77110194138148*^9, 3.771101955492482*^9}, 
   3.7711025381654806`*^9, 3.77110631472661*^9, 3.7711161019298954`*^9, 
   3.7711162100591335`*^9, 3.771116253188464*^9, 3.7712360628129287`*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"869d67b6-8f20-4d1d-af58-931cf1bfafc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"plot", "->", "segmentation"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.771116183301753*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"409c7e12-da1d-4d1c-b6ac-5ea88b2d74fb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"plot", "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], "}"}]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 273, 20817782642356972625, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 273, 20817782642356972625, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 273, 20817782642356972625, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20817782642356972625 === $SessionID, 
   Out[273], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.7711019490311337`*^9, 3.7711019602507563`*^9}, 
   3.7711025433785152`*^9, 3.7711063482985306`*^9, {3.771116109188078*^9, 
   3.7711161127152185`*^9}, {3.771116184737398*^9, 3.771116215865714*^9}, 
   3.7711162558558044`*^9, {3.7712360670025797`*^9, 3.7712360742954073`*^9}},
 CellLabel->
  "Out[273]=",ExpressionUUID->"8141d86f-a78c-4a7c-b6f5-a3c9e4beff39"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other ideas", "Section",ExpressionUUID->"e5e26a7e-2773-4870-baf0-c42ad86a191b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", "=", 
  RowBox[{"ImageRotate", "[", 
   RowBox[{
    RowBox[{"Rasterize", "[", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}], 
    ",", "0", ",", 
    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[224]:=",ExpressionUUID->"5cc019fc-b545-452c-9be4-06092a2100b1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
vwEAAACG9h+ok9GT
    "], {{0, 226}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Output",
 CellChangeTimes->{3.7711025580072036`*^9, 3.7711161900000935`*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"9a89b900-a008-43e3-baac-9cc980f831dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ImageLines", "[", 
  RowBox[{"ColorNegate", "[", "plot", "]"}], "]"}]], "Input",
 CellLabel->
  "In[145]:=",ExpressionUUID->"372f549b-3677-4a9f-b94f-6e953955914e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "16.76000095879914`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"360.`", ",", "16.760000958799168`"}], "}"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"21.979393760619676`", ",", "226.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"21.22886252403712`", ",", "0.`"}], "}"}]}], "}"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{3.7711161927514343`*^9},
 CellLabel->
  "In[225]:=",ExpressionUUID->"0ad60a85-78e5-4a4c-8b1e-7341c6fc1596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "16.76000095879914`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"360.`", ",", "16.760000958799168`"}], "}"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"21.979393760619676`", ",", "226.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"21.22886252403712`", ",", "0.`"}], "}"}]}], "}"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7711161929993505`*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"2b0189bd-99c2-45eb-9785-96b1f97fe074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightImage", "[", 
  RowBox[{"plot", ",", "%"}], "]"}]], "Input",
 CellLabel->
  "In[226]:=",ExpressionUUID->"4d422bd6-f3bb-4d77-971b-c61deb55bd28"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    FormBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
vwEAAACG9h+ok9GT
        "], {{0, 226}, {360, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}],
     TraditionalForm], {0, 0}, {0, 0}, {360, 226}], 
   {Opacity[1], 
    LineBox[{{0., 16.76000095879914}, {360., 16.760000958799168`}}]}, 
   {Opacity[1], 
    LineBox[{{21.979393760619676`, 226.}, {21.22886252403712, 0.}}]}},
  DefaultBaseStyle->{"Graphics", 
    RGBColor[1, 0, 0], 
    FaceForm[
     Opacity[0.2]], 
    Thickness[0.006], 
    PointSize[0.018], 
    EdgeForm[{
      Thickness[0.004], 
      RGBColor[1, 0, 0]}]},
  ImageSizeRaw->{360, 226},
  Method->{Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 360}, {0, 226}},
  PlotRangePadding->None]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.771102565952688*^9, 3.771116195378764*^9, 
  3.7711724090838356`*^9},ExpressionUUID->"86d377bd-9819-4f99-a181-\
ea350d06f459"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DominantColors", "[", 
  RowBox[{"plot", ",", "Automatic", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Color\>\"", ",", "\"\<CoverageImage\>\""}], "}"}], ",", 
   RowBox[{"ColorCoverage", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"641de11d-0658-4524-aa6f-cf6ae7c5a3d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.9999994542917262, 0.9999990613752895], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.6666663028611508, 0.6666660409168597],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"1.`", ",", "0.9999994542917262`", ",", 
             "0.9999990613752895`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.9999994542917262, 0.9999990613752895]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.9999994542917262, 0.9999990613752895],
      Editable->False,
      Selectable->False], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt3d9O1EAYQPGpV76Gb+Gtl97iE0CCeqUJmhhf1yeRPy3bBax0vv3OTLvn
FyGpMLQ9lG4nbNl3V98vPr8ppfx4e/vu4vLXh5uby9+f7hY+fvt5/eX65v3V
3Yf/3L59HUoZXvLy/+rUyj/667SszLAzw84MOzPsnOA+6sMVxnSdYefTu297
+/b4b7BzhvFwHsr0frDzCR2nLOXw/tkHVa8cT/meHs/FGeFJPA3p+TnHswPW
640cy+cFOzPszLAzw84MOzPszLAzw9kgw8oMOzPszLAzw84MOzPszLAzw84M
54MMKzPszLAzw84MOzPszLAzw84MOzOcDzKszLAzw84MOzPsnMXn81dbE8v7
U6qtumXq0PlhMWuj9mflrWnTXbHjUsom7dK6zt4/WG3l4Tx19vycqownDs/P
JDsz7MywM8PODDsz7MywM8PZIMPKDDsz7MywM8PODDsz7MywM8PODOeDDCsz
7MywM8PODDsz7MywM8PODOcpR9JiWHku78mzdp5JfJKynWfsDMl7tLJzFp9n
jhgje99EsjJF9nhO9Xg8j4tNN2bHDueNcdEZYQrPzxCvN1qwM8PODDsz7Myw
M8PODDsznA0yrMywM8PODDsz7MywM8PODDsz7Mw4t/lgq709r8qJTwj934qb
rLWVdr/dtzO05iZrbabZw9GZdW7Gzgw7M+zMsDPj3OaDrViZYWeGnRl2Ztg5
j8/nR0z3tXl/SirvH0TMX0RssHOaMvL+wXSenxleb/DszLAzw86M/XXuc4/6
3KqATq9Te9ymiF7nAz1uU0S3nbvcqoBOd6jLjdohOzPszLAzw84MOzPszLAz
w86MTqdPu2Nlhp0ZdmbYmWFnhp0ZdmZssbPbjOj0N4DLtrfNvf6mddkGt9jO
jC1m3mLnTbJzFl+nBuHrLnHm9wE13pQ98742RBlvIRwXNnmZtAH3WT0/Z5vu
0vR6A2Vnhp0Zdmb02bnPrYroco92eK3Z4/7s8Zq+x/3ZZece96jLjYrZ3Q51
ys4MOzPszLAzw84MOzPszLAzw9d7YrR6uacdTq0XNTqa7cys1c7Qas8s89k9
HrViZ4adGXZm2JmR98Dvd3AurcbZXSEvSzua7XzEzozM80bWl94iYzAinVuN
3aLA/obOwJv8/kZiVS8+e6Sr/1K9LsYGv/5zF0va+VWdi3K8WHvxYF8YppWW
TypmPhVDMuws3Yk9SNaPjay3fmiJDa83/nWJ6tHVOxxY7/wPj6wdWSLDgwKx
QkMD36PaztPwyjWHRH4ImxzPwR/8Vk/5DJ1iAz/7ofNG3chTDK9fa4vRjTvj
oSPH5NDweiMW2umGJG3XX4z8Q40=
        "], {{0, 226}, {360, 0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.3999997979338314, 0.3999994754160956, 0.39999930595934846`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.26666653195588763`, 0.26666631694406373`, 0.266666203972899],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.3999997979338314`", ",", "0.3999994754160956`", ",", 
             "0.39999930595934846`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.3999997979338314, 0.3999994754160956, 0.39999930595934846`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.3999997979338314, 0.3999994754160956, 0.39999930595934846`],
      Editable->False,
      Selectable->False], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt3UFKHEEYgNHprLxGbpFtlm71BAomWSmMguS6OUk0uhFmNumpr2jnPVBo
pZnmmwbrH7rw6+3D1Y8vu93u8eLl29XN8/f9/ub39evB5f3T3c+7/bfb11//
efn6tewOO/ZzTmtZlC6o3NC5oXND54bOw7ytMN7XGToPcCCqzg2dGzo3lsVE
WNB4GOuNCXRu6NzQuaFzQ+eGzg2dG6bBhsoNnRs6N3Ru6NzQuaFzQ+eGzg3z
YEPlhs4NnRs6N3Ru6NzQuaFzQ+eGebChckPnhs4NnRs6D+N5/gl0bug8zHL0
gGHsH2xoPIz1xgQ6N3Ru6NzQuaFzQ+eGzg3TYEPlhs4NnRs6N3Ru6NzQuaFz
Q+eGebChckPnhs4NnRs6N3Ru6NzQuWFOaajc0Lmhc0Pnhs7DeM58Ap2H+bBi
1rmhc8O+tobGw1hvTKBzQ+eGzg2dGzo3dG7o3DANNlRu6NzQuaFzQ+eGzg2d
Gzo3dG6YBxsqN3Ru6NzQuaFzQ+eGzg2dGzo3zIMNlRs6N3Ru6NzQeTDP8w9n
X1tP54bOo3zcMGj/YEPjwaw3Ujo3dG7o3NC5oXND54bODdNgQ+WGzg2dGzo3
dG7o3NC5oXND54Z5sKFyQ+eGzg2dGzo3dG7o3NC5oXPDPNhQuaFzQ+eGzsP4
PzUT6NzQuaFzw762hsajvN/A1hspnRs6N3Ru6NzQuaFzQ+eGabChckPnhs4N
nRs6N3Ru6NzQuaFzwzzYULmhc0Pnhs4NnRs6N3Ru6NzQuWEebKjc0Lmhc0Pn
hs6NNZ1nnbtFW+w87f1dcfLi8PjhupNHXdXnOzxF54UxDtY+u79Hs+jc0Lmh
M/wz65PrNa+78pq392H91i54a9d7Atu7qc7Pmb1Fx+cmmGPaPWm9AcD/+At3
fg1A
        "], {{0, 226}, {360, 0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.7019605099695899, 0.7647054401821617, 0.8627441855551392], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.46797367331305995`, 0.5098036267881079, 0.5751627903700929],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.7019605099695899`", ",", "0.7647054401821617`", ",", 
             "0.8627441855551392`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.7019605099695899, 0.7647054401821617, 0.8627441855551392]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7019605099695899, 0.7647054401821617, 0.8627441855551392],
      Editable->False,
      Selectable->False], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt3U1Kw0AAhuGMK6/hLdy6dFtP0ELVlUIUxOt6Eltctl3kZ74x6fOAhVCC
8Dad/A69271vnm+6rvu4Pbxstl8Pfb/9fjouPL597l/2/f3u+PbP4e+1dAAA
AP9POXllRuXcos4VlNMFnWdWOlETdA4pRWYAAAAAAAAAAAAAAKjAA/spw0oX
H80Io2b66DzYwM7mD441bEaVwjFSAwAAAAAAAAAAsA6eiEtRuj6/GZGhc4jf
5lgkH1qAQSijmNcW8bc961ybzhnG5xiZAQAAAAAAuMCtpBSl63MPOkPnEA+E
AgAAwFo4x8/QOcP8wQydQ8wfjBA5Q2cA4ux8UpSuz5MwGTqHeOIIAAAAAADA
fakYpetzpzVD5xB3tIGVsh/JMQ8owry2CCNHhMQxUgMwhv1HitL1Ob7P0DnE
lXwAAIDVcsKXonR9rhRl6BziihwAMAMHFClK1+dMJEPnEGd8wFmGhvrs6eZ0
uaTOLIstNsQxMMD1mTLyX9VeY+LRyOhVr/EoqFHn/HehTFh3uibf/Ybb8yL/
7di1p3SeGKpN5zaZW3ZupsX43HBdAJbsFzT7CxA=
        "], {{0, 226}, {360, 0}}, {0,
         1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.3686265049386595, 0.505882043771485, 0.7098030258061783], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.24575100329243968`, 0.3372546958476567, 0.47320201720411886`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.3686265049386595`", ",", "0.505882043771485`", ",", 
             "0.7098030258061783`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.3686265049386595, 0.505882043771485, 0.7098030258061783]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.3686265049386595, 0.505882043771485, 0.7098030258061783],
      Editable->False,
      Selectable->False], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt3VFKAkEAx+GdnrpGt+i1x17tBAqWTwUWRNftJCmRiVHkrvtfd/b70AVR
EX8O47I6erV4mt1fNE3zfLnZzOavN+v1/O1ue+H28WX5sFxfL7ZXv2/Oq9IA
AFANO3ch5fO8O9GnsreFcSnlcOQaz3047Gx+7sfP8QwAAAAAAAAAAAAAAFAn
61PaOmoFyu62Mh/r2JU+CrfTrrPaffte5Q0AAAAAAAAAAADAefBfBhk6Z+gM
DM+6iRSZqYnxnGB+BgAAAAAAACrnC3QZOmfoDAAAAMBZsj6lb1+HBmXulbxh
gieYnwEAWvINjQydM3QGAAAAAACAmvgEMEPnDJ2BepnfYqybSJGZmhjPCeZn
AGDSHPnM0DlDZwAAAOD8OYKRoXOGzgAAsM8ecobOGToDDKVY4RKh86n8XVJn
xsU+MAD8bkLvkhN6qifQ4VcaSre7D2OgHcbujzqyzJN86Enp2NnL9E+dQo1u
fgaAuA9+ZgsD
        "], {{0, 226}, {360, 0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.8117638099131591, 0.6156855836985293], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.5411758732754395, 0.4104570557990196],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"1.`", ",", "0.8117638099131591`", ",", 
             "0.6156855836985293`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.8117638099131591, 0.6156855836985293]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.8117638099131591, 0.6156855836985293],
      Editable->False,
      Selectable->False], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt3U1OwzAQBlCbFdfgFmxZsi0naKUCK5ACEuK6nIQWRaFsY/yZn/fUuKoq
K9VkOsrC41zsHje3Z6WUp/PDsNm+XE3T9vXm+OH64Xl/t58ud8ev3w7HfS0A
APwt9WSkhzoPy4t+pHOGOGeIc4b6HCKhAQAAAAAAAAAAAAAgz3r+CP0pMYKc
UJeBjpTnjCXOQt2XhAYAAAAAAAAAAAAA4JR15hH149A30Zt0zljyma7EOUN9
DlGgAQAAAAAAAAAAAABghFqs5w+YwyzSAYIcIJkDtFvFeG5phvsNAAAAAAAA
AAAAAAA+aZyI8NylHM8Ri5DMEdqAIuo8CHVX9csbAAAAAAAAAAAAAAAAAAAA
P15bh/j62S3nbexqH9EU37a7RNvMtbPX79IwdpOHUdd30PRRezwM+c1N/6NR
tW7QaVsvUEPdaPEbi8aQfG6Pcz7Uw3Ljn91vAPBd3gGVfArk
        "], {{0, 226}, {360, 
        0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{360, 226},
      PlotRange->{{0, 360}, {0, 226}}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7711025704021587`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"3dffc010-742a-4162-acfe-0809381d9628"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3VFKAkEAx+GdnrpGt+i1x17tBAqWTwUWRNftJCmRiVHkrvtfd/b70AVR
EX8O47I6erV4mt1fNE3zfLnZzOavN+v1/O1ue+H28WX5sFxfL7ZXv2/Oq9IA
AFANO3ch5fO8O9GnsreFcSnlcOQaz3047Gx+7sfP8QwAAAAAAAAAAAAAAFAn
61PaOmoFyu62Mh/r2JU+CrfTrrPaffte5Q0AAAAAAAAAAADAefBfBhk6Z+gM
DM+6iRSZqYnxnGB+BgAAAAAAACrnC3QZOmfoDAAAAMBZsj6lb1+HBmXulbxh
gieYnwEAWvINjQydM3QGAAAAAACAmvgEMEPnDJ2BepnfYqybSJGZmhjPCeZn
AGDSHPnM0DlDZwAAAOD8OYKRoXOGzgAAsM8ecobOGToDDKVY4RKh86n8XVJn
xsU+MAD8bkLvkhN6qifQ4VcaSre7D2OgHcbujzqyzJN86Enp2NnL9E+dQo1u
fgaAuA9+ZgsD
    "], {{0, 226}, {360, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Input",ExpressionUUID->"5f3c7f77-85ce-\
459c-8d79-8e535ff9c9ff"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3b0JwmAYhdFoIa7hCrrA6wo6QQTFIiBoIa7rJGr5NRYieCXnwA2E9E8R
8rPYnTaHadd1l/nzsOmv6/O5v21nr5N9P6yWw+vi/bnjpAMAAAAAAAAAAAAA
AAAA/kpVOwAy6DNAJn0GyKTPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAjEFVOwAy6DNAJn0GyKTPAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMWVU7ADLoM0AmfQbI
pM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfKqqHQAZ
9Bkgkz4DZNJnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiPqnYA
ZNBngEz6DJBJnwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMvnPFEAmfQbI
pM8AmfQZAAAAAAAAAAAAAAAAAAAAAAAA4L/4jhxAJn0GyKTPAJn0GQAAAAAA
AAAAAAAAAAAAGBvvWQNk0meATPoMkEmfAQAAAAAAAAAASOY5N4BM+gyQSZ8B
MukzAAAA8C3uMwBk0meA937VSX0GeE+fATLpJEAmfQYAAAAAAAAAAAAAAAAA
AAAAAAAAAAByPACf7GFM
    "], {{0, 226}, {360, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Input",ExpressionUUID->"5b90bddb-368e-\
49c2-9fc2-e5e07903a85e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Training set", "Title",
 CellChangeTimes->{{3.771185764567953*^9, 
  3.771185773453122*^9}},ExpressionUUID->"500af9c7-75c4-4bee-b421-\
d43cb315a3b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  "\"\<Dilated ResNet-22 Trained on Cityscapes Data\>\"", "]"}]], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"179a197b-21d7-4e86-b66c-f82059d8c763"],

Cell[BoxData[
 TemplateBox[{
  "General","mxcacheerr",
   "\"The cached definitions of the neural networks functionality at \
/Users/jofre/Library/Caches/Wolfram/PacletCachedData/201904070164/MXNetLink_\
12.0.0_1agsyq8ky7art appear to be corrupted and will be deleted. If any \
neural networks functionality doesn't behave as expected, please quit the \
kernel and try again.\"",2,369,69,17370040244715347250,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771185566490394*^9},
 CellLabel->
  "During evaluation of \
In[369]:=",ExpressionUUID->"6ba3eb7f-169d-4f67-a055-35386b522e55"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"input_0\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["84", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 57}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-77., 
                    4.7148901767173095`*^-15}, {-76., \
-5.218976102404807*^-14}}], 
                    
                    LineBox[{{-76., -5.218976102404807*^-14}, {-75., \
-1.3751612165521746`*^-13}}], 
                    
                    LineBox[{{-75., -1.3751612165521746`*^-13}, {-74., \
-1.0915564456477083`*^-13}}], 
                    
                    LineBox[{{-74., -1.0915564456477083`*^-13}, {-73., 
                    1.4657850796890788`*^-13}}], 
                    
                    LineBox[{{-73., 1.4657850796890788`*^-13}, {-72., 
                    9.139034302498588*^-13}}], 
                    
                    LineBox[{{-72., 9.139034302498588*^-13}, {-71., 
                    2.2212408317084857`*^-12}}], 
                    
                    LineBox[{{-71., 2.2212408317084857`*^-12}, {-70., 
                    4.040169002914385*^-12}}], 
                    
                    LineBox[{{-70., 4.040169002914385*^-12}, {-69., 
                    5.68856691753786*^-12}}], 
                    
                    LineBox[{{-69., 5.68856691753786*^-12}, {-68., 
                    5.6742948304827*^-12}}], 
                    
                    LineBox[{{-68., 
                    5.6742948304827*^-12}, {-67., -0.7418229372546493}}], 
                    LineBox[CompressedData["
1:eJxN0mtIk1EYB/ClKRYatSQvmaWUfpm2IFNBPSHShVAfVwQjlLlQo7RcgVow
q3mbVoO1ciqNJWtdcOZyrolTfIzKzMs2hRwhE7SLEinC9kEZ2vuefVh/zsvh
B+d9zv/DiRPfEJQEcDicZOZjd18K8IrySLzR3ZbZZFZNeL2A3vKQyrJFOalu
vPBItw74MnWr13mqg9hvZme7PYDh3voay/ALorxT+GdlDTAgg5tuDesmVo1e
rvoLaOtWTVqDTSR/Ljp6YQnwVpI4v2reQs6dGNJ+XwRceeaOC9szRIxdD6Ok
LsCDtfp4zB0htRnNTWNOQJO+d66MfCQCg202ZwZQUyo6sHf1M8namN9unQTM
U8hKZnPHSE7CwC7eF8BPMVHmvkvjpJhf5FF/AORwD4d2RU4SdeRE/+Yg0++6
7upA/RT55QoUiiyAX/lq+4LWRvLqgr4NvgPkdW/FclPsZCrIcTTcAHjRUyEc
lthJRzsbQCNHF7HeYCdkWZW1rGLuS3tN/SNNsZimAJS/N1C3yNkAbtw2Uic7
ZUlOGWBUnYl6JlE6nSgF/OkwU9dUswEUlVqoY0YlzGLmneynHtlXzizAIpHP
tI8QsKfN938W2+c84Ghln79PHmDhUi91M1vnDKBk678+2YCb5rfU02yfTMCd
oQZ/n1TAx9ve+PscA2xt1fv78AAjxjupS9kkMO9Bq6G+HNFz13UI0FHcTr37
wZP7r/YDqsRPqSvoAEBhp9J330AK4XEB42IV1Mer1jZ+hwGuOluon7vPat07
AIcdTdTscUEwMy+kgbox3dHJCQS8JpVR+94z4Gn+Pep/g2h1Qg==
                    "]], 
                    
                    LineBox[{{-67., -0.7418229372546493}, {-66., \
-0.74182293746308}}], 
                    
                    LineBox[{{-66., -0.74182293746308}, {-65., \
-0.7418229375532195}}], 
                    
                    LineBox[{{-65., -0.7418229375532195}, {-64., \
-0.7418229375604956}}], 
                    
                    LineBox[{{-64., -0.7418229375604956}, {-63., \
-0.7418229372208845}}], 
                    
                    LineBox[{{-63., -0.7418229372208845}, {-62., \
-0.2010036157929098}}], 
                    
                    LineBox[{{-64., 0.25817706389421285`}, {-63., 
                    0.2581770635633272}}], 
                    
                    LineBox[{{-63., 
                    0.2581770635633272}, {-62., -0.2010036157929098}}], 
                    
                    LineBox[{{-62., -0.2010036157929098}, {-61., \
-0.20100361578148432`}}], 
                    
                    LineBox[{{-61., -0.20100361578148432`}, {-60., \
-0.7806722847656679}}], 
                    LineBox[CompressedData["
1:eJxNk21MU1cchzulqAgqDTpRqoBgQWW6VFztRo6YzWyccy7OSV0GM6MNU5GA
rUzBtL4hqA3BgJqBU8aWYpGNgQPZ0mnuf1S8dN1AkIz6AikUrYCrb5mi2wfb
44f2l9zcPMnNOU+e5MaoCzblTBGJROu8j+/NdpCD4uwIo95i4+Uhj958UsxB
WKEreupKgS89bp+buJuDBPcW8+jmq/wzQ9UL004O7BatNGbF73yJ+31rjoaD
+4PZwdodv/FvXRvR7fyMAzxt+cWMwVb+eWTe9PaNHOhdhj3ObWZ+aMRZ8sEG
7/djD+LEuUf5kejUu5HvciA4XGmjt2pQUH/5CvlKDk51XR3/f28Lio8Vsi/E
cTCZvDzeZf8VWXOXcsELOMi3Fv2hlwByNjU+/mg2B7WDM6V1qVZUNPEJKQzi
wDjGGTOfdqITS2K3lr6gsMadKmmWdaElqrkyg4dC3d+jbWeGbEhekmTOdFEQ
fnlHt2i+HXU05g5FOyg0GZVpyn47kvvWSqG9WJzikfyJDH0yQ5+ZQk7/bMaC
NkrQnqVQsCOSsSTcu0oKNxSxjLNaxJktpRROrF/G2JT+0pS+j8L5srcZP/R4
l09hnljBWFnhUlRoKDivpDA+kuQ4nPQphaCL6xkzHzmFQ1+mM9b7fGQUvru0
ye8TReHnsAzG4WwUfspX+X3EFGocKr/PSwJarPL7eAisETYzVvh8XATG8Ovz
S3w+DgLGm5zfp5XA3Tzk9zETOJmgDOhD4HT86oA+BCY0SQF9CFS54gP6ECg3
SQP6EHCcj2C8lvUhUDQewvgw60Mgr0DEeDUTIpAmvf2ej3Ux1d3DMgJ9ic9X
JXfbUW3TYGhzlPe+Q+qwEJEdtQ1M9ZwJJ3AkTtqX12BDbd+G6OqDCTRKZAc+
FwRUJ35S3f0fhmnkYMSdrE60d4ZFPe8xhurrCVX3t3egtT+oe/T3MFjWpT4S
D1xB98Ynht64g6FlT0+5ynYJ7e/KqKzvxRBVNvm09OMLKPGBNrOyE8OshrGv
tyi/QovlDTUpFgwPE4M/7K35nlefm8SNzRiy7Me2uhWt/MQyjW6gHsOPxyTt
ql2XebjtDu08i6Fw6caMb4o7eGdz2cLdpzBMD42stX5xjcdmVDtcjkHyrybZ
9I+NF3VITs8pw1A5vGphSvRf/Ov/HcPR3gPpFZM9/CswkvK6
                    "]], 
                    
                    LineBox[{{-60., -0.7806722847656679}, {-59., \
-0.7806722849853677}}], 
                    
                    LineBox[{{-59., -0.7806722849853677}, {-58., \
-0.7806722850541483}}], 
                    
                    LineBox[{{-58., -0.7806722850541483}, {-57., \
-0.7806722849745534}}], 
                    
                    LineBox[{{-57., -0.7806722849745534}, {-56., \
-0.7806722847762267}}], 
                    
                    LineBox[{{-56., -0.7806722847762267}, {-55., \
-0.24977282411385834`}}], 
                    
                    LineBox[{{-55., -0.24977282411385834`}, {-54., \
-0.24977282412070803`}}], 
                    
                    LineBox[{{-54., -0.24977282412070803`}, {-53., 
                    0.15785262012358073`}}], 
                    
                    LineBox[{{-54., -0.24977282412070803`}, {-53., \
-0.842147381221903}}], 
                    
                    LineBox[{{-53., -0.842147381221903}, {-52., \
-0.8421473814557853}}], 
                    
                    LineBox[{{-52., -0.8421473814557853}, {-51., \
-0.8421473815135667}}], 
                    
                    LineBox[{{-51., -0.8421473815135667}, {-50., \
-0.8421473814619813}}], 
                    
                    LineBox[{{-50., -0.8421473814619813}, {-49., \
-0.8421473812261807}}], 
                    
                    LineBox[{{-49., -0.8421473812261807}, {-48., \
-0.2963958471754579}}], 
                    LineBox[CompressedData["
1:eJxN0m1IU1EcBvD1IkRIacJCMMhPNkIpXGBGRkhwzoEY+mm06oMpOFoOUaEs
V1qTqFFGL5QGZZgrKFlE1GKjZzGWRC9MnBkLy6xgEJWJvYyo7nn2YftzL5cf
9557n/vcW9rgrm9aaDKZKoxdHzlHFDoae3DUGt0y79sV+ntAIeHspX3nuv2O
NoW+5An6sdkVMbsUbgRP05eKVi1d16hQvPg8XXBSL1D49LCftnSNlXXVKyyb
ukpPpyb+BIRxv31+ujo+aKqtUWhxjtDWSj0K/vg92mMsHytTmNoUpkdbS560
liiEN0fpokI9CltfPaV3BvIcgTyF5iVx+rotPWRLS1jjE/S3L3okhte/oatO
zRibRMgyTR8rn+wpn5TYH/xIM85difzod/qgzuOXqKv8Qcd0nssSwf5f2Txn
JLalf9M7dB6vxFxdOpunUyI2mDn/VcdpMZ6f+pnNs0di3DJP9+g8domChtmc
fiTcF97Rh9iPxPLCZE4/Rt41CXoF+5FwJl/QDvYjUbp2lB5mPwJVKyM5/Qjc
uhKkN7IfAU/0Tk4/AiPem/TzZ3oEqmcy3zdWsftfKCLwaPtFerXZssh2XyCx
oY9+rV/otsDhgeP0bPtej31I4IGnm27+/H7+5YCA920nXZM6a2wCH8LtdIe+
3CcwXuym89uu1S7oFbDPOenM/yzgUk30fxLTdKQ=
                    "]], 
                    
                    LineBox[{{-49., 
                    0.15785262007064504`}, {-48., -0.2963958471754579}}], 
                    
                    LineBox[{{-48., -0.2963958471754579}, {-47., \
-0.2963958471789112}}], 
                    
                    LineBox[{{-47., -0.2963958471789112}, {-46., \
-0.8730830228697329}}], 
                    LineBox[CompressedData["
1:eJxNk39M1GUcx5GAWBF01ECTGKy80xERQ1IBeQ57fgjl5JiB40hJxtU4BhJI
gEDKARHaKVCzAHcoaIoQB0YeRDwf2g4QjM4jt0PYyGiZG+PHWlLAScdzf3Dv
7dmz1/bdntde2zfwWHZCurOTk5PcdtZvsVMM7mTVxUr/NfPO+pD5xUIG0ozh
fIn+Li8avf3R9lwG1oGIPIXcxJW1Y9XNagZNs79q7ih+5ofm9+5KS2MQ5dnB
deO3efrvvgUfJDP45a+nGv3cBrlWnXJAH88gpXh881uPBrip+tlbeymD/prI
TOlyL98h39btFcnA0Gh8uEXTyevPXGfSEAZ5qhdryrovcnXMjVDdqwxafY6w
WHUWuuWtOP1kC4NVbYC1oqMJFazVv4m9GBTfO7HY9Uk76nz6M8VxFwYn7vca
LgZ9h1KDtprL/qPQ7HO+36vBgKoyFIaTcxSoLqI6xLMPyYxBLsoZCsfyerda
y/tRdGRrd4CFwt9feuUWrHG0M8y2mxRGDDuHTdGASsyyEvM3FO7+ES14OMdv
KKeRQsuh/YK9JbbVUIhxVwhW6l2V+goKrWuHBV85uNxysIjCVESq4IU527Io
3O9RCd6jndmtTbP5FmcK1gRbyoIPU9ilyREcJkYh5FLpho+MQntAmeChdR8/
CpcHyzd8JBSeq6sUnLzu40phtuLTDZ9lAjE6O8+JEfCYtn+/e91nhsA7pGLD
x0LA2Wx/z96HQN0rHwsuFX0IfO2a69CHwLR/luAXRB8CquwPBaeIPgSClt53
6EPgje+TBc+LPgTy2xIc+hBYmYh16EMAouUOfQgsXXhZ8D9vj/RNywjoBqcW
Uq0cdSRdNV71I7CtbdZbV9yPlIlDB6okBEp/y3isXPkBLbPgd8vdCFxLS2q4
UGhA51+zTNavYLgc3rUpYekm8nUZfjC6gOFB2+MEn0dtqHZsVeX7J4Z9m0fj
PIw65Hw2X10yieH5wMDE7CNKpIoKn7eaMByfkrZfCm7i5PPVhx5GDP6602Fj
6V28MHFfqKUHA9Zvz4z07uObvnIbPdqB4V48lntof+KTitju5isYrvXEG7oG
Brl7+TMLzY0YGmr3+EtaRnjV63EnU7/A8O3kkxxZ+BhPUbgnTZy1vRdnmijq
NfHKWazxrMTw0tFziz+Gmrn9f8cwfiPK6b1T4/x/m64E5g==
                    "]], 
                    
                    LineBox[{{-46., -0.8730830228697329}, {-45., \
-0.8730830230868464}}], 
                    
                    LineBox[{{-45., -0.8730830230868464}, {-44., \
-0.8730830231804676}}], 
                    
                    LineBox[{{-44., -0.8730830231804676}, {-43., \
-0.873083023103999}}], 
                    
                    LineBox[{{-43., -0.873083023103999}, {-42., \
-0.8730830228867009}}], 
                    
                    LineBox[{{-42., -0.8730830228867009}, {-41., \
-0.30470967314857694`}}], 
                    
                    LineBox[{{-41., -0.30470967314857694`}, {-40., \
-0.30470967314096}}], 
                    
                    LineBox[{{-40., -0.30470967314096}, {-39., \
-0.8586518309560891}}], 
                    LineBox[CompressedData["
1:eJxF0m9Ik0EcB/BZzNDZ1JRWbVmirnwxX5RQG7FH74RGGeuPxmLTJB1Z1pZU
6KQsnFFWTEowK/PFnEYvspXIZEr3c9AmoiazDQ1afwbGSm2aZo3C9txAv9zx
8IHjnu8dl3pKf1S7hsPhZIUn+40kD941yThF18dJs/xQd/APhvXFZdMlYjdJ
UOcY035i2Kx4I+SZx4iucFLf8h3DfLtdZJsaIc8lmwxKP4aCJdUtS/YQGfP/
bVO8x6C5ra3xSZzEW3Xzs3EMA6/o03yZe4CQgC0nyokBfPf9+jw7uSM19YMd
Q09d7myXzEpkp2MLHV0Yhh/sEohSmsmoLFl62IIhb8qb6R5pYDor/8U6HmLI
dx+sbp3qYIDnHBI0YhBfW/Bld7xktsToqo/UYxhs65TolDbGfmYxSW/AwFfs
2xma62MeSzRPLugwLNT0jE7cJczrAnPy8VIMRNiQwE0YYNI/ugzbVBg88mfx
Ls8Ak72bDYbZ8+NlrwQO5qp7R3hgMHg+UA9WilyVIgy1VV+pNySywRA6FqTW
WLlqKxfDzNnf1B3KkEUZQnCif5k6OMsGgVwRrWUtNfn3mvwIHvHjqI2SiTrJ
BAJdfCI1rdONYHpuK/UVts9TBOUnU6ldbJ9WBIO/0rQrfe4hiO/NoFazfW4g
kLaLtSt9ahAc6I34B1tHhyB3KWO1TykCUUn6ah8VAt985H8jw+HkI6h/kULt
zCpe7s8N7ycUUm/fmLlWuQfBuT4B9WQduwGCb43J1MFLFbWqdASOlsj5yqe/
LL4VIlj08KmZQJM8kITAuD9yH5fDyy1xCCpmYqh5F804KhqB1bWOOvKeESi9
XOr/1iZhBQ==
                    "]], 
                    
                    LineBox[{{-39., -0.8586518309560891}, {-38., \
-0.8586518311817718}}], 
                    
                    LineBox[{{-38., -0.8586518311817718}, {-37., \
-0.8586518312621769}}], 
                    
                    LineBox[{{-37., -0.8586518312621769}, {-36., \
-0.8586518311902132}}], 
                    
                    LineBox[{{-36., -0.8586518311902132}, {-35., \
-0.8586518309648149}}], 
                    
                    LineBox[{{-35., -0.8586518309648149}, {-34., \
-0.26733174654319003`}}], 
                    
                    LineBox[{{-36., 0.14134817059282276`}, {-35., 
                    0.14134817037390449`}}], 
                    
                    LineBox[{{-35., 
                    0.14134817037390449`}, {-34., -0.26733174654319003`}}], 
                    
                    LineBox[{{-34., -0.26733174654319003`}, {-33., \
-0.26733174654932923`}}], 
                    
                    LineBox[{{-33., -0.26733174654932923`}, {-32., \
-0.7983224246922427}}], 
                    LineBox[CompressedData["
1:eJxN039M1HUcx3EUDp0gSeoCJRaQJCiMW82gz/f7/Xwl0UDzOunC6KRTEwtc
wcFRRtMTKD0F1/IHGio/RujSDNQDD4LPix8exy+11mwokcXhImygIYNC1/Hh
n+9778++e/zz2XOf7Ru07aNNO2a7ubnJrjP95WOW0Rf2wunxpT+yhDFx18hu
GVfq1gzi3RusT+2+MzDL5Vu+JzdFdDPbVc1oYboMa7VVV1HmYP0HQuaS7TJq
46KWVtva2IaKPReXJ7t8bN9Q7idgHqqtA7o3ZGSvTtznVV/HPGs6q1riZPzz
dXneqtPnmbaqYeLDV2Q8/1l/cbTJwpzOF3uTI2U4M5IWVqwvo0fPrjY9CZER
dCU/TrW2hv4dvSAz31/G/XNbLIZEGx05Udo95CPjg65TaQ9CQU+0j+xXe8j4
s+nQIvuSVnrLMmut9SHFo4u5sZGfX6M9Qd+Qzj6KL0t2jYWlttNFSZ2j5XaK
2oKUcFujg34flrlDqKZIT9M67xzqoKl8KH5btiL4q5sddLJS82+lhuI2nuMu
Gog+PBBN0XDTjzuYD0WBbiF3rcHLtRRqzQLuhNKx+NIxCdcan+Lu/3V6JEjl
vtyZAe2ulXBmcjG36p1q10oYtAdwz/RIyCkXuSd4j4Tzr63jPsx7JPjEabhD
eI/rvuM6RY+EZDGZez3vEREbs0XRI2LzwRRuI+8RURI1Y0/eI8J7pV7RI+K2
dqPifUTMzYpX9IhQ331V0SMi8aSo6BGRdmYVdzzvEZA7EqnoEVBQGKroEfCF
6VlFjwDztzPvvZP3CPBuHQ2atiXWsLlBI6C1WL/CdKyD9ryd6ynGCJjvsK4L
dDqo+kJdxnCwgMHEqZyiH9rppZjFxXZvAVoSZWsJtNO3Zh/dfX2cYOMerU/T
vDb6jOdLfu6/E/QFGHL2mpvpxJpHxve6CMYjrv4x362RTjb9YnloJUjqPfjk
3NO1dEn2Hf13ZQSXPs4wl2VeoHubB/J8LQSh9wzL/H8+Qu1vmufcMxKk9n7q
V/mgiA1H1PwVnkJQ7PE4Hs1n2fCGnJV3Ewh+IqZTU8bLrLvmRrcqhqBlf9aQ
JbueFeobu0qWE3hdnlK1GcHCX6dhFf4E6enuef9ta2VV+bpBP2+Cx/d73h+e
Z2czPzxB28v6+iNpDvY/aZv69g==
                    "]], 
                    
                    LineBox[{{-32., -0.7983224246922427}, {-31., \
-0.7983224253890578}}], 
                    
                    LineBox[{{-31., -0.7983224253890578}, {-30., \
-0.7983224253595419}}], 
                    
                    LineBox[{{-30., -0.7983224253595419}, {-29., \
-0.7983224250319676}}], 
                    
                    LineBox[{{-29., -0.7983224250319676}, {-28., \
-0.7983224248107047}}], 
                    
                    LineBox[{{-28., -0.7983224248107047}, {-27., \
-0.19075247382755667`}}], 
                    
                    LineBox[{{-27., -0.19075247382755667`}, {-26., \
-0.19075247382430247`}}], 
                    
                    LineBox[{{-26., -0.19075247382430247`}, {-25., \
-0.7063960024040041}}], 
                    LineBox[CompressedData["
1:eJxN0ntIU1EcwHEbTUyFiOyhmJZWjooJpufcs8jzR0JNi+Gclq8eI8XX3dKW
K8MIFPdHOlNDUNDlg0zRmGH+YdL9ZfnIQteqJeRKE7XVH4EKoS1pO/tnP87l
8uFezvlyuQfUWmWOyMfHR+q63HfPyGCczxhqKJgQ3smehNhXCaTZRo1RZaOC
qXfaFrdEoH12Lq/v6IhwM/VqrP9n1/Mt5+sSN4eFtLii4xljBOYrk7LCHAOC
7Ozyh0MDBCYN8Tm90Y+Fg82fdvEPCUhW69rvp1QKQeF4PfoeAaNUs4GdrXTb
l4A7Gh2B6JAjvj2vn9KtUymdkiwCCXy6SF31gtba9+hrThNoUT77dmHlFZ2X
jtT0xxDQdhduFgVN0D8vlT8e7COw87kim+9+Sy2Nb6qwHwGD4YozvX+KXus7
nN+0wkG+wcIHN1roR3FB7dAsB3qJ4d/f6vfUaWpYbx7j4PcjVZ/qpJU6bnd0
ycwcWESkPLLLSnPZcBCCTvF5k1a63qnY6FRwcKJNzly7wBkXOA5M9QrmyAj3
cCD3T2UevBzgWhzE+GUwJ5nW5KY1DJeqLzJ/tbsHg6VRzVwSOl4cOo6hIiqX
2TfTLM40YyiLz2f29GC4G1vMvMF6MFRlXmc2sh4Mi9tvMLOcCAwtyaVePRh6
9uuZE1kPgh3leq8eBNO5eq8eBIv2Uq8eBMrvnv2bm9yDYK9Ox1ydPbx5qwLB
uZkSZnpM6duqQRCo8vT2i90bIEhe1jLPOWxO8xkEYfUa5umZ0V8mjECn4pnL
rVGu5TpPWsT80/16MILB8ELm3UsJBlEggg5JAbPnf3b1yD3f6z/P72ws
                    "]], 
                    
                    LineBox[{{-25., -0.7063960024040041}, {-24., \
-0.7063960026722625}}], 
                    
                    LineBox[{{-24., -0.7063960026722625}, {-23., \
-0.7063960027748365}}], 
                    
                    LineBox[{{-23., -0.7063960027748365}, {-22., \
-0.7063960027112146}}], 
                    
                    LineBox[{{-22., -0.7063960027112146}, {-21., \
-0.7063960024776166}}], 
                    
                    LineBox[{{-21., -0.7063960024776166}, {-20., \
-0.1133053377495502}}], 
                    
                    LineBox[{{-22., 0.2936039989919137}, {-21., 
                    0.2936039987698406}}], 
                    
                    LineBox[{{-21., 
                    0.2936039987698406}, {-20., -0.1133053377495502}}], 
                    
                    LineBox[{{-20., -0.1133053377495502}, {-19., \
-0.11330533775939838`}}], 
                    
                    LineBox[{{-19., -0.11330533775939838`}, {-18., \
-0.6405839778932279}}], 
                    LineBox[CompressedData["
1:eJxN029MU1cYBvACMhhlwlChGbIJDaTeW9p7L5sSFV8IBQWCVEVE20TnVCqd
kxbsiP9FGxNxZRG2hKArU9LoqFoMCta5vmWM1lmDAi2yjc4hWYDggmBMZGxK
T7/0yXty8vvy5jkfTuKuA5v2BPN4vMz547v9SUNzrXBZQ9A9W1AI7PfOcHhv
in5zMqfDVvEwJnH13xyqtza5BP0W24Ydh+NjBzlUHX8W3VZ82dbYWa080MNh
aeM0taj9iG3zUMRobjuH1ta2vnZRExyyszcvNHPo/q/52vQSC0RrnvdU1HIo
rJOkRwmssHgsI+nnKg7L66jyLFUX6FOE3fVKDnUlEXbTR05onMiLH1nHYYH4
WKe8wwXDJ6oV0xyHMSblqi27HkHh+PXT3Qkchvw+PDsk7INx4fNvS8M5fNXe
dXFFcz/cZNLOX59mcTKNL1QPDsDVqJO6nj9YHN3acfbL+25woSe7uYfFv5Y5
BhQ6DyTIPp5dbWHxT8OqIIHXA3tJWMw1JUebeYMw21I0PyyaZRJiw7P0+WHx
t+IVxEkkLPZ6Mohv7+TPD4tnf5UR5xtf5hlfMvgeU0DsHfaFwdKwjcTapQ7N
UgeDKnkJ8TsKS6jCwmAWX0Hs78Ng7lxZQB8GPUZ1QB8GT9u+IBaSPgwWKDQB
fRhkKiuJG9aO168dl6I07CDxj3d9kWJ+nI6YrDNIseay33yyQIruVr8funyR
oFdfRex7XZ5RgjMG//4E33M0EsxI1hLnyHyR4O31FcRqe+zn9lgJfvp6P/E3
pE8qZq5UB/RJRXmwiniU9EnFr7fvJo4kfVIxNHNnQB8x6mbkxGUR24v2GsU4
cuVR99yYByadyjPpWjH+ULJt5J/vPVAS7q7KzhFj79yEqob2gMnZFXdGIMbC
Jn1ph94NT99NqQiZpFHELW/7yjIAPNf/RzttNO6wu7Wh5n4IiyrMMtXTOLW+
9uKH1X3wqi/a6iqj0evMY4cWPwZXXP4YvYbGopokZfmCXljwRGSOWEhjzIs3
mxuOPIBLks/Kr45QGHbhhMFIOcEU/zop3Eqh9FQL/9zCXyDSOOFOaaBQb1I/
2CbqgqHOladCNRR+EGluen/qJ4jc95RqkVNYl+1I5v69A5dujLqC0yjcMyP6
ZIn2FhjPyfYlCij8Lv7xfWtxG/j/O4WV1ccdObmt8BZ2+tvs
                    "]], 
                    
                    LineBox[{{-18., -0.6405839778932279}, {-17., \
-0.640583978256699}}], 
                    
                    LineBox[{{-17., -0.640583978256699}, {-16., \
-0.640583978415079}}], 
                    
                    LineBox[{{-16., -0.640583978415079}, {-15., \
-0.6405839784030567}}], 
                    
                    LineBox[{{-15., -0.6405839784030567}, {-14., \
-0.6405839782135834}}], 
                    
                    LineBox[{{-14., -0.6405839782135834}, {-13., 
                    0.05327051220204817}}], 
                    
                    LineBox[{{-13., 0.05327051220204817}, {-12., 
                    0.05327051219647745}}], 
                    
                    LineBox[{{-12., 0.05327051219647745}, {-11., 
                    0.05327051219195834}}], 
                    
                    LineBox[{{-11., 0.05327051219195834}, {-10., 
                    0.05327051218733975}}], 
                    
                    LineBox[{{-10., 0.05327051218733975}, {-9., 
                    0.053270512182678524`}}], 
                    
                    LineBox[{{-9., 0.053270512182678524`}, {-8., 
                    0.05327051217942418}}], 
                    LineBox[{{-8., 0.05327051217942418}, {-7., 
                    0.05327051217688038}}], 
                    
                    LineBox[{{-7., 0.05327051217688038}, {-6., 
                    0.05327051217497606}}], 
                    
                    LineBox[{{-6., 0.05327051217497606}, {-5., 
                    0.05327051217362597}}], 
                    
                    LineBox[{{-5., 0.05327051217362597}, {-4., 
                    0.05327051217258851}}], 
                    
                    LineBox[{{-4., 0.05327051217258851}, {-3., 
                    0.05327051217180685}}], 
                    
                    LineBox[{{-3., 0.05327051217180685}, {-2., 
                    0.05327051217123836}}], 
                    
                    LineBox[{{-2., 0.05327051217123836}, {-1., 
                    0.05327051217086882}}], 
                    
                    LineBox[{{-1., 0.05327051217086882}, {
                    3.261878110937545*^-18, 0.053270512170669804`}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-76.4, \
-2.942790054374192*^-14}, {-0.25, 0}, 
                    Offset[8], {1., -5.690465120076538*^-14}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"3", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-75.4, \
-1.033855774027497*^-13}, {-0.25, 0}, 
                    Offset[8], {1., -8.532636063116938*^-14}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-74.4, \
-1.2049983540094948`*^-13}, {-0.25, 0}, 
                    Offset[8], {1., 2.8360477090446627`*^-14}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-73.4, 
                    4.428484695543639*^-14}, {-0.25, 0}, 
                    Offset[8], {1., 2.557341525336787*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-72.4, 
                    6.069734613374784*^-13}, {-0.25, 0}, 
                    Offset[8], {1., 7.673249222809509*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-71.4, 
                    1.6983058711250348`*^-12}, {-0.25, 0}, 
                    Offset[8], {1., 1.3073374014586269`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-70.4, 
                    3.3125977344320252`*^-12}, {-0.25, 0}, 
                    Offset[8], {1., 1.818928171205899*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"16", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-69.4, 
                    5.0292077516884695`*^-12}, {-0.25, 0}, 
                    Offset[8], {1., 1.6483979146234754`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"256\"", 
                    "\"512\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"32", "256", "512"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-68.4, 
                    5.680003665304764*^-12}, {-0.25, 0}, 
                    Offset[8], {1., -1.427208705515989*^-14}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"256\"", 
                    "\"512\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"32", "256", "512"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-67.4, -0.44509376235051984`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.7418229372603237}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"256\"", 
                    "\"512\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"32", "256", "512"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-66.22222222222223, 
                    0.25817706405486796`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777776294`, 
                    3.003047810423709*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"256\"", 
                    "\"512\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"32", "256", "512"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-66.4, -0.7418229373797077}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.0843071713017025`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-65.4, -0.7418229375171637}, \
{-0.25, 0}, 
                    Offset[8], {1., -9.013945145852631*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-64.4, -0.7418229375575851}, \
{-0.25, 0}, 
                    Offset[8], {1., -7.276068636485888*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-63.4, -0.7418229373567289}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.396110059838975*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-62.4, -0.4173313443640997}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5408193214279747}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-63.4, 
                    0.25817706369568144`}, {-0.25, 0}, 
                    Offset[8], {1., -3.308856522110659*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-62.4, -0.017331344050414976`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.45918067935623696`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-61.400000000000006`, \
-0.20100361578605452`}, {-0.25, 0}, 
                    Offset[8], {1., 1.142547167987118*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-60.400000000000006`, \
-0.5488048171719945}, {-0.25, 0}, 
                    Offset[8], {1., -0.5796686689841836}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-59.355555555555554`,
                     0.2193277166418785}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 1.883423972337539*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-59.4, -0.7806722848974877}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.1969981389702298`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-58.4, -0.7806722850266361}, \
{-0.25, 0}, 
                    Offset[8], {1., -6.878064784388016*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-57.4, -0.7806722850063914}, \
{-0.25, 0}, 
                    Offset[8], {1., 7.959488623754396*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-56.400000000000006`, \
-0.7806722848555574}, {-0.25, 0}, 
                    Offset[8], {1., 1.9832668840535916`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-55.400000000000006`, \
-0.4621326083788057}, {-0.25, 0}, 
                    Offset[8], {1., 0.5308994606623684}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-54.4, -0.24977282411796814`}, \
{-0.25, 0}, 
                    Offset[8], {1., -6.849687483878597*^-12}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-53.4, -0.005197557574134787}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.40762544424428876`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-53.4, -0.6051975583814251}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.592374557101195}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"128\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"64", "128", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    
                    0.3333333333333333}}]}], {-52.400000000000006`, \
-0.8421473813622324}, {-0.25, 0}, 
                    Offset[8], {1., -2.338822469027946*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-51.4, -0.8421473814904541}, \
{-0.25, 0}, 
                    Offset[8], {1., -5.778144629431381*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-50.400000000000006`, \
-0.8421473814826155}, {-0.25, 0}, 
                    Offset[8], {1., 5.1585402616183273`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-49.4, -0.8421473813205009}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.358006012670444*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-48.4, -0.514696460795747}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5457515340507229}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-51.22222222222222, 
                    0.15785262033766964`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777774872`, 
                    6.870615187892781*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-48.4, -0.11469646027701673`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.45424846724610296`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-47.400000000000006`, \
-0.29639584717752987`}, {-0.25, 0}, 
                    Offset[8], {1., -3.453293206945318*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-46.4, -0.6424081525934042}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.5766871756908217}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-45.355555555555554`,
                     0.12691697861338586`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888889568, 
                    1.8502727128222318`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-45.400000000000006`, \
-0.8730830230000011}, {-0.25, 0}, 
                    Offset[8], {1., -2.171134383388562*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-44.4, -0.8730830231430191}, \
{-0.25, 0}, 
                    Offset[8], {1., -9.362122188605326*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-43.400000000000006`, \
-0.8730830231345864}, {-0.25, 0}, 
                    Offset[8], {1., 7.646860922250198*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-42.4, -0.8730830229736202}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.1729806842785138`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-41.4, -0.5320590130438265}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.568373349738124}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-40.400000000000006`, \
-0.30470967314400677`}, {-0.25, 0}, 
                    Offset[8], {1., 7.616962616197043*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-39.4, -0.6370749678300374}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.5539421578151291}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-38.22222222222223, 
                    0.1413481705368776}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777004`, 
                    3.364067358013756*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"128", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-38.400000000000006`, \
-0.8586518310914988}, {-0.25, 0}, 
                    Offset[8], {1., -2.2568269475442548`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-37.4, -0.8586518312300149}, \
{-0.25, 0}, 
                    Offset[8], {1., -8.04051270009154*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-36.4, -0.8586518312189986}, \
{-0.25, 0}, 
                    Offset[8], {1., 7.196376827778295*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-35.4, -0.8586518310549742}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.2539825561551652`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-34.4, -0.50385978031184}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5913200844216249}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-35.4, 
                    0.1413481704614718}, {-0.25, 0}, 
                    Offset[8], {1., -2.189182723988381*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-34.4, -0.1038597797763522}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.4086799169170945}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-33.400000000000006`, \
-0.2673317465468735}, {-0.25, 0}, 
                    Offset[8], {1., -6.139200259269728*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-32.4, -0.5859261534350773}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.5309906781429135}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-31.355555555555554`,
                     0.20167757670778996`}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888889213, -1.8907680976454344`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-31.4, -0.7983224251103318}, \
{-0.25, 0}, 
                    Offset[8], {1., -6.968151611275175*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-30.4, -0.7983224253713483}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.951594524347456*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-29.4, -0.7983224251629973}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.275743010178189*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-28.400000000000002`, \
-0.7983224248992098}, {-0.25, 0}, 
                    Offset[8], {1., 2.2126289689339274`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-27.4, -0.4337804542208159}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.607569950983148}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-26.4, -0.19075247382560415`}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.254202463054412*^-12}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-25.4, -0.5001385909721234}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.5156435285797016}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.22222222222222, 
                    0.2936039988975062}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777004`, 
                    4.151068377922229*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"256\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"256", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-24.4, -0.7063960025649592}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.682584154811707*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-23.4, -0.7063960027338069}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.0257394933432806`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-22.4, -0.7063960027366634}, \
{-0.25, 0}, 
                    Offset[8], {1., 6.362188553765691*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-21.4, -0.7063960025710558}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.3359802980849054`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.4, -0.35054160364077674`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.5930906647280664}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    0.29360399885866983`}, {-0.25, 0}, 
                    Offset[8], {1., -2.2207308214561294`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.4, 
                    0.04945839685820613}, {-0.25, 0}, 
                    Offset[8], {1., -0.4069093365193908}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-19.4, -0.1133053377554591}, \
{-0.25, 0}, 
                    Offset[8], {1., -9.84817782878622*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-18.4, -0.42967252183969606`}, \
{-0.25, 0}, 
                    Offset[8], {1., -0.5272786401338294}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.355555555555554`,
                     0.35941602304941217`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 3.135480763916121*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-17.4, -0.6405839781113105}, \
{-0.25, 0}, 
                    Offset[8], {1., -3.634711420730241*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-16.4, -0.640583978351727}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.5837997580092633`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-15.4, -0.6405839784078655}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.2022272066758433`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-14.4, -0.6405839782893727}, \
{-0.25, 0}, 
                    Offset[8], {1., 1.8947332591778832`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-13.4, -0.22427128396420448`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.6938544904156315}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     0.05327051219870574}, {-0.25, 0}, 
                    Offset[8], {1., -5.570717498404321*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    0.05327051219376598}, {-0.25, 0}, 
                    Offset[8], {1., -4.519114249479372*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    0.053270512189187186`}, {-0.25, 0}, 
                    Offset[8], {1., -4.618590232485786*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    0.05327051218454301}, {-0.25, 0}, 
                    Offset[8], {1., -4.661222796631392*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    0.05327051218072592}, {-0.25, 0}, 
                    Offset[8], {1., -3.25434124093249*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    0.0532705121778979}, {-0.25, 0}, 
                    Offset[8], {1., -2.543805444066294*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    0.05327051217573779}, {-0.25, 0}, 
                    Offset[8], {1., -1.9043169818822037`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    0.053270512174166}, {-0.25, 0}, 
                    Offset[8], {1., -1.3500936479893255`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.4, 
                    0.05327051217300349}, {-0.25, 0}, 
                    Offset[8], {1., -1.0374548442548814`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"19\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"19", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    0.05327051217211952}, {-0.25, 0}, 
                    Offset[8], {1., -7.816594593812454*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"19\"", "\"64\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"19", "64", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     0.05327051217146576}, {-0.25, 0}, 
                    Offset[8], {1., -5.684896997593114*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"19\"", "\"512\"", 
                    "\"1024\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"19", "512", "1024"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    0.05327051217101664}, {-0.25, 0}, 
                    Offset[8], {1., -3.6954467264038726`*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"1024\"", 
                    "\"19\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "1024", "19"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4, 
                    0.053270512170749414`}, {-0.25, 0}, 
                    Offset[8], {1., -1.9901441605796322`*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"512\"", "\"1024\"", 
                    "\"19\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"512", "1024", "19"}, "\[Cross]"], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-77., 4.7148901767173095`*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"input_0\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["input_0", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-76., -5.218976102404807*^-14}], 
                    Offset[{10, 10}, {-76., -5.218976102404807*^-14}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-76., -5.218976102404807*^-14}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"16", ",", 
                    RowBox[{"{", 
                    RowBox[{"7", ",", "7"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "512", ",", "1024"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution0", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    16, {7, 7}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{3, 3}, {3, 3}}, "Dilation" -> {1, 1}, 
                    "Input" -> {3, 512, 1024}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-75., -1.3751612165521746`*^-13}], 
                    Offset[{10, 10}, {-75., -1.3751612165521746`*^-13}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-75., -1.3751612165521746`*^-13}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm0", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {16, 512, 1024}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-74., -1.0915564456477083`*^-13}], 
                    Offset[{10, 10}, {-74., -1.0915564456477083`*^-13}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-74., -1.0915564456477083`*^-13}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu0", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {16, 512, 1024}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-73., 1.4657850796890788`*^-13}], 
                    Offset[{10, 10}, {-73., 1.4657850796890788`*^-13}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-73., 
                    1.4657850796890788`*^-13}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"16", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution1", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    16, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {16, 512, 1024}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-72., 9.139034302498588*^-13}], 
                    Offset[{10, 10}, {-72., 9.139034302498588*^-13}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-72., 9.139034302498588*^-13}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm1", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {16, 512, 1024}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-71., 2.2212408317084857`*^-12}], 
                    Offset[{10, 10}, {-71., 2.2212408317084857`*^-12}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-71.,
                     2.2212408317084857`*^-12}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {16, 512, 1024}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-70., 4.040169002914385*^-12}], 
                    Offset[{10, 10}, {-70., 4.040169002914385*^-12}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-70., 4.040169002914385*^-12}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"32", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution2", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    32, {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {16, 512, 1024}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-69., 5.68856691753786*^-12}], 
                    Offset[{10, 10}, {-69., 5.68856691753786*^-12}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-69., 5.68856691753786*^-12}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "256", ",", "512"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm2", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {32, 256, 512}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-68., 5.6742948304827*^-12}], 
                    Offset[{10, 10}, {-68., 5.6742948304827*^-12}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-68.,
                     5.6742948304827*^-12}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "256", ",", "512"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu2", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {32, 256, 512}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-67., -0.7418229372546493}], 
                    Offset[{10, 10}, {-67., -0.7418229372546493}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-67., -0.7418229372546493}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "256", ",", "512"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution3", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {32, 256, 512}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-64., 0.25817706389421285`}], 
                    Offset[{10, 10}, {-64., 0.25817706389421285`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-64., 0.25817706389421285`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "256", ",", "512"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution5", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Input" -> {32, 256, 512}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-66., -0.74182293746308}], 
                    Offset[{10, 10}, {-66., -0.74182293746308}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-66., -0.74182293746308}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm3", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-65., -0.7418229375532195}], 
                    Offset[{10, 10}, {-65., -0.7418229375532195}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-65., -0.7418229375532195}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-64., -0.7418229375604956}], 
                    Offset[{10, 10}, {-64., -0.7418229375604956}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-64., -0.7418229375604956}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution4", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {64, 128, 256}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-63., -0.7418229372208845}], 
                    Offset[{10, 10}, {-63., -0.7418229372208845}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-63., -0.7418229372208845}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm4", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-62., -0.2010036157929098}], 
                    Offset[{10, 10}, {-62., -0.2010036157929098}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-62., -0.2010036157929098}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add0", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{64, 128, 256}, {64, 128, 256}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-63., 0.2581770635633272}], 
                    Offset[{10, 10}, {-63., 0.2581770635633272}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-63., 0.2581770635633272}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm5", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-61., -0.20100361578148432`}], 
                    Offset[{10, 10}, {-61., -0.20100361578148432`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-61., -0.20100361578148432`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-60., -0.7806722847656679}], 
                    Offset[{10, 10}, {-60., -0.7806722847656679}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-60., -0.7806722847656679}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution6", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {64, 128, 256}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-55., -0.24977282411385834`}], 
                    Offset[{10, 10}, {-55., -0.24977282411385834`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-55., -0.24977282411385834`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add1", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{64, 128, 256}, {64, 128, 256}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-59., -0.7806722849853677}], 
                    Offset[{10, 10}, {-59., -0.7806722849853677}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-59., -0.7806722849853677}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm6", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-58., -0.7806722850541483}], 
                    Offset[{10, 10}, {-58., -0.7806722850541483}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-58., -0.7806722850541483}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-57., -0.7806722849745534}], 
                    Offset[{10, 10}, {-57., -0.7806722849745534}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-57., -0.7806722849745534}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"64", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution7", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    64, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {64, 128, 256}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-56., -0.7806722847762267}], 
                    Offset[{10, 10}, {-56., -0.7806722847762267}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-56., -0.7806722847762267}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm7", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-54., -0.24977282412070803`}], 
                    Offset[{10, 10}, {-54., -0.24977282412070803`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-54., -0.24977282412070803`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu6", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {64, 128, 256}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-53., 0.15785262012358073`}], 
                    Offset[{10, 10}, {-53., 0.15785262012358073`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-53., 0.15785262012358073`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"128", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution10", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    128, {1, 1}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Input" -> {64, 128, 256}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-53., -0.842147381221903}], 
                    Offset[{10, 10}, {-53., -0.842147381221903}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-53., -0.842147381221903}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"128", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "128", ",", "256"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution8", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    128, {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {64, 128, 256}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-52., -0.8421473814557853}], 
                    Offset[{10, 10}, {-52., -0.8421473814557853}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-52., -0.8421473814557853}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm8", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-51., -0.8421473815135667}], 
                    Offset[{10, 10}, {-51., -0.8421473815135667}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-51., -0.8421473815135667}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu7", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-50., -0.8421473814619813}], 
                    Offset[{10, 10}, {-50., -0.8421473814619813}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-50., -0.8421473814619813}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"128", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution9", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    128, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {128, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-49., -0.8421473812261807}], 
                    Offset[{10, 10}, {-49., -0.8421473812261807}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-49., -0.8421473812261807}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"batchnorm9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm9", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-48., -0.2963958471754579}], 
                    Offset[{10, 10}, {-48., -0.2963958471754579}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-48., -0.2963958471754579}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, 64, 128}, {128, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-49., 0.15785262007064504`}], 
                    Offset[{10, 10}, {-49., 0.15785262007064504`}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-49., 0.15785262007064504`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm10", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-47., -0.2963958471789112}], 
                    Offset[{10, 10}, {-47., -0.2963958471789112}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-47., -0.2963958471789112}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu8", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-46., -0.8730830228697329}], 
                    Offset[{10, 10}, {-46., -0.8730830228697329}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-46., -0.8730830228697329}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"128", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution11", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    128, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {128, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 36), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-41., -0.30470967314857694`}], 
                    Offset[{10, 10}, {-41., -0.30470967314857694`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-41., -0.30470967314857694`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add3", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{128, 64, 128}, {128, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 37), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-45., -0.8730830230868464}], 
                    Offset[{10, 10}, {-45., -0.8730830230868464}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-45., -0.8730830230868464}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm11", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 38), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-44., -0.8730830231804676}], 
                    Offset[{10, 10}, {-44., -0.8730830231804676}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-44., -0.8730830231804676}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu9", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 39), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-43., -0.873083023103999}], 
                    Offset[{10, 10}, {-43., -0.873083023103999}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-43., -0.873083023103999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution12\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"128", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution12", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    128, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {128, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 40), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-42., -0.8730830228867009}], 
                    Offset[{10, 10}, {-42., -0.8730830228867009}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-42., -0.8730830228867009}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm12\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm12", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 41), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-40., -0.30470967314096}], 
                    Offset[{10, 10}, {-40., -0.30470967314096}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-40., -0.30470967314096}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu10", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {128, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 42), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-39., -0.8586518309560891}], 
                    Offset[{10, 10}, {-39., -0.8586518309560891}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-39., -0.8586518309560891}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution13\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution13", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {2, 2}, 
                    "Input" -> {128, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 43), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-36., 0.14134817059282276`}], 
                    Offset[{10, 10}, {-36., 0.14134817059282276`}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-36., 0.14134817059282276`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"128", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution15", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Input" -> {128, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 44), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-38., -0.8586518311817718}], 
                    Offset[{10, 10}, {-38., -0.8586518311817718}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-38., -0.8586518311817718}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm13\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm13", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 45), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-37., -0.8586518312621769}], 
                    Offset[{10, 10}, {-37., -0.8586518312621769}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-37., -0.8586518312621769}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu11", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 46), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-36., -0.8586518311902132}], 
                    Offset[{10, 10}, {-36., -0.8586518311902132}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-36., -0.8586518311902132}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution14\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution14", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {2, 2}, 
                    "Input" -> {256, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 47), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-35., -0.8586518309648149}], 
                    Offset[{10, 10}, {-35., -0.8586518309648149}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-35., -0.8586518309648149}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm14\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm14", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 48), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-34., -0.26733174654319003`}], 
                    Offset[{10, 10}, {-34., -0.26733174654319003`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-34., -0.26733174654319003`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add4", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{256, 64, 128}, {256, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 49), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-35., 0.14134817037390449`}], 
                    Offset[{10, 10}, {-35., 0.14134817037390449`}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-35., 0.14134817037390449`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm15", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 50), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-33., -0.26733174654932923`}], 
                    Offset[{10, 10}, {-33., -0.26733174654932923`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-33., -0.26733174654932923`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu12\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu12", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 51), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-32., -0.7983224246922427}], 
                    Offset[{10, 10}, {-32., -0.7983224246922427}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-32., -0.7983224246922427}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution16", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {2, 2}, 
                    "Input" -> {256, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 52), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-27., -0.19075247382755667`}], 
                    Offset[{10, 10}, {-27., -0.19075247382755667`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-27., -0.19075247382755667`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add5", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{256, 64, 128}, {256, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 53), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-31., -0.7983224253890578}], 
                    Offset[{10, 10}, {-31., -0.7983224253890578}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-31., -0.7983224253890578}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm16", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 54), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-30., -0.7983224253595419}], 
                    Offset[{10, 10}, {-30., -0.7983224253595419}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-30., -0.7983224253595419}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu13\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu13", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 55), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-29., -0.7983224250319676}], 
                    Offset[{10, 10}, {-29., -0.7983224250319676}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-29., -0.7983224250319676}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"256", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution17", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    256, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {2, 2}, 
                    "Input" -> {256, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 56), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-28., -0.7983224248107047}], 
                    Offset[{10, 10}, {-28., -0.7983224248107047}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-28., -0.7983224248107047}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm17", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 57), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-26., -0.19075247382430247`}], 
                    Offset[{10, 10}, {-26., -0.19075247382430247`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-26., -0.19075247382430247`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu14\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu14", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {256, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 58), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-25., -0.7063960024040041}], 
                    Offset[{10, 10}, {-25., -0.7063960024040041}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-25., -0.7063960024040041}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution18\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution18", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{4, 4}, {4, 4}}, "Dilation" -> {4, 4}, 
                    "Input" -> {256, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 59), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-22., 0.2936039989919137}], 
                    Offset[{10, 10}, {-22., 0.2936039989919137}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-22., 0.2936039989919137}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution20\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"256", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution20", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Input" -> {256, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 60), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-24., -0.7063960026722625}], 
                    Offset[{10, 10}, {-24., -0.7063960026722625}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-24., -0.7063960026722625}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm18\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm18", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 61), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-23., -0.7063960027748365}], 
                    Offset[{10, 10}, {-23., -0.7063960027748365}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-23., -0.7063960027748365}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu15", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 62), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-22., -0.7063960027112146}], 
                    Offset[{10, 10}, {-22., -0.7063960027112146}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-22., -0.7063960027112146}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution19\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution19", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{4, 4}, {4, 4}}, "Dilation" -> {4, 4}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 63), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-21., -0.7063960024776166}], 
                    Offset[{10, 10}, {-21., -0.7063960024776166}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-21., -0.7063960024776166}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm19\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm19", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 64), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-20., -0.1133053377495502}], 
                    Offset[{10, 10}, {-20., -0.1133053377495502}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 
                    14], {-20., -0.1133053377495502}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add6", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{512, 64, 128}, {512, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 65), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-21., 0.2936039987698406}], 
                    Offset[{10, 10}, {-21., 0.2936039987698406}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-21., 0.2936039987698406}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm20\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm20", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 66), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-19., -0.11330533775939838`}], 
                    Offset[{10, 10}, {-19., -0.11330533775939838`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-19., -0.11330533775939838`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu16", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 67), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-18., -0.6405839778932279}], 
                    Offset[{10, 10}, {-18., -0.6405839778932279}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-18., -0.6405839778932279}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution21\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution21", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{4, 4}, {4, 4}}, "Dilation" -> {4, 4}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 68), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-13., 0.05327051220204817}], 
                    Offset[{10, 10}, {-13., 0.05327051220204817}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-13., 
                    0.05327051220204817}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"elemwise_add7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["elemwise_add7", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Plus, "Inputs" -> {{512, 64, 128}, {512, 64, 128}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 69), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-17., -0.640583978256699}], 
                    Offset[{10, 10}, {-17., -0.640583978256699}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-17., -0.640583978256699}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm21\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm21", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 70), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., -0.640583978415079}], 
                    Offset[{10, 10}, {-16., -0.640583978415079}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", 
                    ImageResolution -> 144, Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], 
                    TraditionalForm], {-16., -0.640583978415079}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu17", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 71), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-15., -0.6405839784030567}], 
                    Offset[{10, 10}, {-15., -0.6405839784030567}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-15., -0.6405839784030567}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution22\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution22", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{4, 4}, {4, 4}}, "Dilation" -> {4, 4}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 72), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-14., -0.6405839782135834}], 
                    Offset[{10, 10}, {-14., -0.6405839782135834}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-14., -0.6405839782135834}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm22\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm22", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 73), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-12., 0.05327051219647745}], 
                    Offset[{10, 10}, {-12., 0.05327051219647745}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-12.,
                     0.05327051219647745}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu18\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu18", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 74), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-11., 0.05327051219195834}], 
                    Offset[{10, 10}, {-11., 0.05327051219195834}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-11., 0.05327051219195834}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution23\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution23", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {2, 2}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 75), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-10., 0.05327051218733975}], 
                    Offset[{10, 10}, {-10., 0.05327051218733975}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-10., 0.05327051218733975}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm23\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm23", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 76), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-9., 0.053270512182678524`}], 
                    Offset[{10, 10}, {-9., 0.053270512182678524`}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-9., 
                    0.053270512182678524`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu19\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu19", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 77), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 0.05327051217942418}], 
                    Offset[{10, 10}, {-8., 0.05327051217942418}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-8., 0.05327051217942418}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution24\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"512", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution24", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    512, {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 78), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 0.05327051217688038}], 
                    Offset[{10, 10}, {-7., 0.05327051217688038}]]}, 
                    InsetBox["\"BN\"", 
                    Offset[{0, -1}, {-7., 0.05327051217688038}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"batchnorm24\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"BatchNormalizationLayer", "[", 
                    RowBox[{
                    RowBox[{"\"Momentum\"", "\[Rule]", "0.899999976158`"}], 
                    ",", 
                    RowBox[{"\"Epsilon\"", "\[Rule]", "9.99999974738`*^-6"}], 
                    ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["batchnorm24", Bold], 
                    Style[
                    HoldForm[
                    BatchNormalizationLayer[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 79), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 0.05327051217497606}], 
                    Offset[{10, 10}, {-6., 0.05327051217497606}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSize -> 20, ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}], TraditionalForm], {-6., 
                    0.05327051217497606}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"relu20\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{"Ramp", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["relu20", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[Ramp, "Input" -> {512, 64, 128}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 80), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 0.05327051217362597}], 
                    Offset[{10, 10}, {-5., 0.05327051217362597}]]}, 
                    InsetBox[
                    PaneBox[
                    StyleBox[
                    "\"\:2217\"", StripOnInput -> False, FontSize -> 20], 
                    ImageSize -> {11, 28}], {-5., 0.05327051217362597}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"convolution25\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ConvolutionLayer", "[", 
                    RowBox[{"19", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Dilation\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["convolution25", Bold], 
                    Style[
                    HoldForm[
                    ConvolutionLayer[
                    19, {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dilation" -> {1, 1}, 
                    "Input" -> {512, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 81), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., 0.05327051217258851}], 
                    Offset[{12, 12}, {-4., 0.05327051217258851}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 
                    1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-4., 0.05327051217258851}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"broadcast_add0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["broadcast_add0", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[3], 
                    Skeleton[4]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 82), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 0.05327051217180685}], 
                    Offset[{10, 10}, {-3., 0.05327051217180685}]]}, 
                    InsetBox["\"D\"", 
                    Offset[{0, -1}, {-3., 0.05327051217180685}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"deconvolution0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"DeconvolutionLayer", "[", 
                    RowBox[{"19", ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "16"}], "}"}], ",", 
                    RowBox[{"\"Stride\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], ",", 
                    RowBox[{"\"PaddingSize\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"19", ",", "64", ",", "128"}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["deconvolution0", Bold], 
                    Style[
                    HoldForm[
                    DeconvolutionLayer[
                    19, {16, 16}, "Stride" -> {8, 8}, 
                    "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Input" -> {19, 64, 128}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 83), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 0.05327051217123836}], 
                    Offset[{10, 10}, {-2., 0.05327051217123836}]]}, 
                    InsetBox["\"T\"", 
                    Offset[{0, -1}, {-2., 0.05327051217123836}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"transpose\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TransposeLayer", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[TwoWayRule]", "3"}], ",", 
                    RowBox[{"1", "\[TwoWayRule]", "2"}]}], "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"19", ",", "512", ",", "1024"}], "}"}]}]}], "]"}],
                     HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["transpose", Bold], 
                    Style[
                    HoldForm[
                    TransposeLayer[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}, "Input" -> {19, 512, 1024}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 84), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 0.05327051217086882}], 
                    Offset[{10, 10}, {-1., 0.05327051217086882}]]}, 
                    InsetBox["\"S\"", 
                    Offset[{0, -1}, {-1., 0.05327051217086882}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"softmax0\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"512", ",", "1024", ",", "19"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["softmax0", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> {512, 1024, 19}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 85), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{3.261878110937545*^-18, 0.053270512170669804`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 86), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[CompressedData["
1:eJxVz2lIFHEYx/HptKgXUopmvvBIy9Cw8nZd13PVVdddj0qMUFzyPljP8hiS
EJUCXQ21MoKKxF6IBh6w+CsEry41hDzQyHI1KhHNVd9kzrjzuDAsn/k+/2dm
rJOylar9DMPEbV///3d+kmh0l+WtffdeE3E3onFlMy0mLtFJu0MoYW399Vp1
fABnVol4I7lPWY+Ys0SJwVN1lsefBvpw55XQFWwsTZ7M4QwFZLHODsNVFZxZ
BWrXc7PG+2s5SxQo7ZcNvjnYxJ9XIKXWzqZ9tZE/H4Wp9zN5B7QLfVyPgtSZ
Ndu4+8mX2xeFBPWm0CVRmJ44nE/nZyaMBLNyzDh8IfvkKGy1qC7pHTL0IJEd
2R+J4kQToTORmB0qyw3c0vHzMlSOlsvv6z/yjsDs1iOhMxGYy35B5sORWP6Q
9G37sMQyVDVUkH1hyE++gwqXft9df1M2Gs+uLPHz2y7sFsyGYj4FpG9b0UN6
CFSL9HwIRm7Xhdrrxww9I0xFnifFuyyN0BkpFpK0H2TLP/n5QIy3iZjr7Djv
YCx4TgmdCYbOTEfmg5DSMEN6EBa7+ogD8VnjRfYFYCldc/Pkrd3uD/nEIVWH
2Vvu/ZgApOd0CJ31R0apds98RlMn6X741VJPuh8mi+0e/z09augRJfeSDftZ
CaYdzgqdkSDrt1vRVM0ib2/0uyf0atIGefsiu/MB6WL8eVZH7IOcJypiEXLd
pMReGMiMJ/s8seJ6bHik+QdvN5iHpmamDI/x3+8BtYkz6e5QO4n3zK9muRK7
YjXalNgFL7vMrer3aQ3dTOxI9l/Gqxpb0i+hQJOhby2f530e6qLygaDgNn7+
ItYrW0h3RmH4a+ILKHreQewIfXMj8TmkeajJPnskhqQSn8FVqxvENpDPxRBb
QdodQWwJsVUIsTlclwOITeColxAbw7ZdTHwEFnoRMYMT3d7Ey31HdV47Tqtu
ip03jRQxRZz/ATYV5yY=
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 24, 20, 
                    20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {2751., 89.13746661804579}, PlotRangePadding -> 
                    0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], ImageSize -> {800, Automatic}, ImageSizeAction -> 
                    "Scrollable", ScrollPosition -> {0., 0.}, 
                    Scrollbars -> {True, False}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "input_0"], 
                    NeuralNetworks`NetPath["Nodes", "convolution0"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm0"], 
                    NeuralNetworks`NetPath["Nodes", "relu0"], 
                    NeuralNetworks`NetPath["Nodes", "convolution1"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm1"], 
                    NeuralNetworks`NetPath["Nodes", "relu1"], 
                    NeuralNetworks`NetPath["Nodes", "convolution2"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm2"], 
                    NeuralNetworks`NetPath["Nodes", "relu2"], 
                    NeuralNetworks`NetPath["Nodes", "convolution3"], 
                    NeuralNetworks`NetPath["Nodes", "convolution5"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm3"], 
                    NeuralNetworks`NetPath["Nodes", "relu3"], 
                    NeuralNetworks`NetPath["Nodes", "convolution4"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm4"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add0"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm5"], 
                    NeuralNetworks`NetPath["Nodes", "relu4"], 
                    NeuralNetworks`NetPath["Nodes", "convolution6"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add1"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm6"], 
                    NeuralNetworks`NetPath["Nodes", "relu5"], 
                    NeuralNetworks`NetPath["Nodes", "convolution7"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm7"], 
                    NeuralNetworks`NetPath["Nodes", "relu6"], 
                    NeuralNetworks`NetPath["Nodes", "convolution10"], 
                    NeuralNetworks`NetPath["Nodes", "convolution8"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm8"], 
                    NeuralNetworks`NetPath["Nodes", "relu7"], 
                    NeuralNetworks`NetPath["Nodes", "convolution9"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm9"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add2"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm10"], 
                    NeuralNetworks`NetPath["Nodes", "relu8"], 
                    NeuralNetworks`NetPath["Nodes", "convolution11"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add3"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm11"], 
                    NeuralNetworks`NetPath["Nodes", "relu9"], 
                    NeuralNetworks`NetPath["Nodes", "convolution12"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm12"], 
                    NeuralNetworks`NetPath["Nodes", "relu10"], 
                    NeuralNetworks`NetPath["Nodes", "convolution13"], 
                    NeuralNetworks`NetPath["Nodes", "convolution15"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm13"], 
                    NeuralNetworks`NetPath["Nodes", "relu11"], 
                    NeuralNetworks`NetPath["Nodes", "convolution14"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm14"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add4"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm15"], 
                    NeuralNetworks`NetPath["Nodes", "relu12"], 
                    NeuralNetworks`NetPath["Nodes", "convolution16"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add5"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm16"], 
                    NeuralNetworks`NetPath["Nodes", "relu13"], 
                    NeuralNetworks`NetPath["Nodes", "convolution17"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm17"], 
                    NeuralNetworks`NetPath["Nodes", "relu14"], 
                    NeuralNetworks`NetPath["Nodes", "convolution18"], 
                    NeuralNetworks`NetPath["Nodes", "convolution20"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm18"], 
                    NeuralNetworks`NetPath["Nodes", "relu15"], 
                    NeuralNetworks`NetPath["Nodes", "convolution19"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm19"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add6"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm20"], 
                    NeuralNetworks`NetPath["Nodes", "relu16"], 
                    NeuralNetworks`NetPath["Nodes", "convolution21"], 
                    NeuralNetworks`NetPath["Nodes", "elemwise_add7"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm21"], 
                    NeuralNetworks`NetPath["Nodes", "relu17"], 
                    NeuralNetworks`NetPath["Nodes", "convolution22"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm22"], 
                    NeuralNetworks`NetPath["Nodes", "relu18"], 
                    NeuralNetworks`NetPath["Nodes", "convolution23"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm23"], 
                    NeuralNetworks`NetPath["Nodes", "relu19"], 
                    NeuralNetworks`NetPath["Nodes", "convolution24"], 
                    NeuralNetworks`NetPath["Nodes", "batchnorm24"], 
                    NeuralNetworks`NetPath["Nodes", "relu20"], 
                    NeuralNetworks`NetPath["Nodes", "convolution25"], 
                    NeuralNetworks`NetPath["Nodes", "broadcast_add0"], 
                    NeuralNetworks`NetPath["Nodes", "deconvolution0"], 
                    NeuralNetworks`NetPath["Nodes", "transpose"], 
                    NeuralNetworks`NetPath["Nodes", "softmax0"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "input_0" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 512, 1024}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {1024, 512}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.29010095242892997`, 
                    0.32808144844279574`, 0.28696394422942517`}, 
                    "VarianceImage" -> {0.03347218471762876, 
                    0.03480672701194479, 0.03403105878800664}, "$Version" -> 
                    "12.0.9", "Interleaving" -> False]], 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{512, 1024, 19}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 
                    Skeleton[16], 19}, "InputDepth" -> 3, "Dimensions" -> 19, 
                    "$Rank" -> 2, "$Version" -> "12.0.9"]], 
                    Association[
                    "convolution0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 3, 7, 7}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {7, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "ChannelGroups" -> 1, "$InputSize" -> {512, 1024}, 
                    "$OutputSize" -> {512, 1024}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "batchnorm0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 16, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {512, 1024}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "relu0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 512, 1024}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "convolution1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 16, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "ChannelGroups" -> 1, "$InputSize" -> {512, 1024}, 
                    "$OutputSize" -> {512, 1024}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "batchnorm1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 16, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {512, 1024}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 512, 1024}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]]], "convolution2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{32, 16, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "ChannelGroups" -> 1, "$InputSize" -> {512, 1024}, 
                    "$OutputSize" -> {256, 512}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]]], "batchnorm2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 32, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {256, 512}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 256, 512}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]]], "convolution3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 32, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "ChannelGroups" -> 1, "$InputSize" -> {256, 512}, 
                    "$OutputSize" -> {128, 256}, "$WeightsInputChannels" -> 
                    32], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "batchnorm3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 64, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "convolution4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {128, 256}, 
                    "$OutputSize" -> {128, 256}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "batchnorm4" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 64, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "convolution5" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 32, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "ChannelGroups" -> 1, "$InputSize" -> {256, 512}, 
                    "$OutputSize" -> {128, 256}, "$WeightsInputChannels" -> 
                    32], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 256, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "batchnorm5" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 64, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "elemwise_add0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "relu4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "convolution6" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {128, 256}, 
                    "$OutputSize" -> {128, 256}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "batchnorm6" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 64, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "relu5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "convolution7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {128, 256}, 
                    "$OutputSize" -> {128, 256}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "batchnorm7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 64, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "elemwise_add1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "relu6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 128, 256}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]]], "convolution8" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {128, 256}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm8" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution9" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm9" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution10" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {128, 256}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 128, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm10" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution11" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm11" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution12" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm12" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 128, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution13" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm13" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu11" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution14" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm14" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution15" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm15" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu12" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution16" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm16" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution17" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm17" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 256, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add5" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu14" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution18" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm18" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu15" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution19" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm19" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution20" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm20" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add6" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu16" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution21" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm21" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu17" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution22" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Dilation" -> {4, 4}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm22" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "elemwise_add7" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu18" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution23" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {2, 2}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm23" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu19" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution24" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "batchnorm24" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.899999976158, "Epsilon" -> 
                    9.99999974738*^-6, "$Channels" -> 512, "Interleaving" -> 
                    False, "$SpatialDimensions" -> {64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "relu20" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 64, 128}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]]], "convolution25" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{19, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 19, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {64, 128}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]]], "broadcast_add0" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "ConstantArray", "Arrays" -> 
                    Association[
                    "Array" -> NeuralNetworks`Private`DummyArray[{19}]], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> {19}, "$ArrayDimensions" -> {19}], 
                    "Inputs" -> Association[], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{19}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> 
                    NeuralNetworks`ValidatedParameter[{Automatic, Automatic}],
                     "Level" -> 2], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "deconvolution0" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{19, 19, 16, 16}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 19, "KernelSize" -> {16, 16}, 
                    "Stride" -> {8, 8}, "PaddingSize" -> {{4, 4}, {4, 4}}, 
                    "Interleaving" -> False, "$InputChannels" -> 19, 
                    "ChannelGroups" -> 1, "$InputSize" -> {64, 128}, 
                    "$OutputSize" -> {512, 1024}, "Dimensionality" -> 2, 
                    "$Dilation" -> {1, 1}, "$WeightsOutputChannels" -> 19], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 64, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{19, 512, 1024}, 
                    NeuralNetworks`RealT]]], "transpose" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[1, 3], 
                    TwoWayRule[1, 2]}]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 512, 1024}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 1024, 19}, 
                    NeuralNetworks`RealT]]], "softmax0" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 1024, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 1024, 19}, 
                    NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"input_0\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {230., {111., 117.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7711855746678343`*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"950ecbdf-fe1e-484f-b4ff-a65d9ae844e2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plots", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Rasterize", "[", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}], "]"}], ",", 
    "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7711859556623917`*^9, 3.771185970891973*^9}, {
  3.771186912775523*^9, 3.771186941572876*^9}, {3.771187103539549*^9, 
  3.771187105753429*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"3f4a535b-d977-449d-8c40-826b093c07d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tdata", "=", 
  RowBox[{"plots", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.771186947603777*^9, 3.771186952772045*^9}, {
  3.771235253404936*^9, 3.77123527830678*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"1d42d871-276f-4851-bf7c-b4915aa60f1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
sRwfAAAAgKX/AyiwjFw=
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
7f92r4xc
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
jFw=
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3DGPE+kBx+FNrkmZr5BvkTZl2ovSIt0p7F0aInGRopTu+QZoSlokCtwh
IUooRtsCDdrCERSLhIQQCG3GeG3Gy9q7/70bz7zj59ECs94zzNzYP7+eecd/
+vFf3x/+/uDg4Jc/NL99/8N//nL79g///dsfm2/+fuuXf/506+Y//nrr3zd/
unn7zz9+19z4v+bXz787OJgvnwIA7EhdHVZ165svJtNZn+sEDNdZJpbdaL5d
BGO1ALBmNp3W898nZ91olpa1WBuEAKxb68YyFq1FgPOuNN44XNfDagID0hpa
bD6+oRVAy9pbkk3nU3QDSOkGkNINIKUbQEo3gJRuACndAFK6AaR0A0iZYQ6k
FANI6QaQ0g0gpRtASjeAlG4AKd0AUroBpHQDSJkvCqQUA0jpBpAqqBtv3314
9OzVm5P3fa8I7LtSutFE48bk4eLr6MXrvlcHNtqHF7hSunH/8fNVN+4+OOp7
deBie/ICV0o3Xh6frHZHE/O+VwcuticvcKV0o/GkPr5z72kTjY+fPve9LnCx
PXmBK6gbUIR9eIHTDSClG0DKPHMgpRhASjeAlG4AKd0AUroBbFJXi9Mmk+ls
7fbRd2MfLjKCTjTVWARjtbA07m7syUVG0InZdLLqRlW3fzLubuzJRUbQlcUb
lfNvU0bejT25yAi60Aw3zoYZX5fOHK7raQU7tA8XGUEXVm9Tvn2jMspWAL+F
+ThjYf3whm4AMd0AUroBpHQDSOkGkNINIKUbQEo32D0XG5ZON9gxFxuOwIhn
mDNMLjYcAcVgx1xsOAK6we652LB0ugGkdANI6QaQ0g0gpRtASjeAlG4AKfNF
gZRiACndAFK6AaR0A0jpBpDSDRixjj5aTTdgrLr7aDXdgLHq7qPVdAPGqruP
VtMNGLGOPlrNPHMgpRhASjeAlG4AKd0AUroBbDKbTs5OnFR1+3bdAC5WV6tc
tBbndAO4UDPYqKrKeAO4umaMscrFvCHGG8Bl1lpRV5PpbPWjw3W9rB4wRK2D
GsYbwBWtzqe0BxunutGrjj5TBbqmG33p7jNVoGu60ZfuPlMFuqYbfenuM1Wg
a7rRo44+UwW6phtASjeAlG4AKd0AUmaYAynFAFK6AaR0A0jpBpDSDSClG0BK
N4CUbgAp3QBS5osCKcUAUroBpHQDSOkGkNINIKUbQEo3gJRuACndAFLmiwIp
xQBSugGkdANI6QaQ0g0gpRvAdrPpZDKdtW/RDWCbumoqoRvAVS2GGnWlG8DV
NEONqv7yp24AV9GMNQ5b2uk4XNfjSgIDZbwBpHQD+NV0A0jpBpAafjfevvvw
6NmrNyfv+14R4MzAu9FE48bk4eLr6MXrvlcHmBt4N+4/fr7qxt0HR9/+B0Yj
sHsD78bL45NVN5o+nPup0Qj0YuDdaDypj+/ce9pE4+Onz+d+dOloBOhC0TNF
t49GgI4UWoyVLaMRoCOldwNOHR7fOd2gdA6P755uUDqHx3dPNyidw+O7pxuM
gMPjO6YbQEo3gJRuACndAFJFzzMHeqEYQEo3gJRuACndAFK6AaR0A0jpBpDS
DSClG0DKfFEgpRhASjeAlG4AKd0AUroBpHQD2GA2nSxPuE6ms9YPdAO4WF0d
VvU3i3O6AVyqGXnoBhA4N9rQDWCrphnnonHammdutjmwbn5c9JtmzGkFcKH5
SKOlfUZFN4CUbgAp3QBSugGkdANI6QaQ0g0gpRtAykxRIKUYQEo3gJRuACnd
AFK6AaR0A0jpBpDSDSClG0BKN4CUeeZASjGAlG4AKd0AUroBpHQDSOkGkNIN
IKUbQEo34FJv33149OzVm5P3fa/IUJgvCts10bgxebj4Onrxuu/VGQTFgO3u
P36+6sbdB0d9r84g6AZs9/L4ZNWN5t1K36szCLoBl3pSH9+597SJxsdPn/te
l0HQDSClG8AmdbU4bTKZztZu1w3YN1d91jfVWARjtZD+DSUYzbaMZkNOR7Qt
o9mQ0ytvy2w6WdaiCUdV53/DNf7R4d9lmGvlLnb9QO7SdGMZi9Zix//o8O8y
zLVyF7t+IHfZPt4A9s2V+rL5+AbAJpvOpwAAAACUayxHPGbTyfIYcembstQ6
/1Wqr3tl7fRdkcbyTFk7l3rNjRrNGZbW/4zz55gL9WWPFr1PRrVTxvFMOctE
a69ca6O2zOgo1/k5bSVa7Ji6KvcRerrYEVU1kvHG6qlS8BNlNp3W7efHtZ/+
W2aQlqrg3bqy3IbCuzF/cRvTw2vxYl30Lplb68b19s/IxhvtB2q5Wkdqyn6c
rj0WC2/gfKcsNubrUqF+g/HGSN61zRW/Oy9Q+HOt/WAsfbwxolfY1q74FU//
cRwlXm5F8a/Ra0rvRmvsVPqGjOjU0Llh4Fj2DwAAAMDS/wEkwoxc
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
1NCpYWAp+wcAAABg5T+Jcoxc
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
ezcac6fcd6RHl4YuTAP7cnwAAAAApv4HsyGMXA==
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 232}, {360, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 232},
    PlotRange->{{0, 360}, {0, 232}}]}], "}"}]], "Output",
 CellChangeTimes->{3.771186954525419*^9, 3.771233907727358*^9, 
  3.7712352845582275`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"62e49baf-394c-4515-9866-2c4efb24e9e3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.771186155596984*^9},ExpressionUUID->"55a7ea75-ba07-4960-aa3c-\
6343519fa075"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawAxes", "[", "n_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"AlphaChannel", "[", 
     RowBox[{"Rasterize", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"10", ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", "Transparent"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
       ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", "n"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771187022951921*^9, 3.771187025485821*^9}, {
   3.771187056996767*^9, 3.771187079946309*^9}, {3.771187119052103*^9, 
   3.771187130725379*^9}, 3.7711872132287817`*^9},
 CellLabel->
  "In[245]:=",ExpressionUUID->"cb79382a-84c6-4d8a-886d-7f3c90ced549"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rawAxes", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.771235483556133*^9, 3.771235486894251*^9}, 
   3.771235832205989*^9},
 CellLabel->
  "In[256]:=",ExpressionUUID->"422083ca-73b0-4dbc-a697-0c523bc4b63c"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt2zFKw2AYgOHo5OgVvIWro2vFA7RYq0uFVBCv7CViXBwdNH2F8jzQQkLz
E95MX+h/tXlZPZ4Pw3C4mL9W67ebcVy/313OB/f7w/Nuv3243b9ud9vxevP1
s4/583Q2fJsGCjo3dG7o3NC5MU1KF1Ru6NzQuaFzQ+eGzg2dGzo3dG7o3JgM
3gmRGzo3dG7o3NC5oXND54bODZ0bOjfM3Q2RGzo3dG7o3NC5oXND54bODZ0b
Ojcmg3dC44bODZ0bOjd0bujc0Lmhc0Pnhs4NY3dD5IbODZ0bOjd0bujc0Lmh
c0Pnhs4Nc3dD5IbODZ0bOjd0bujc0Lmhc0Pnhs4Nc3dD5IbODZ0bOjd0bujc
0Lmhc0Pnhs4N+7sbGjd0bujc0Lmhc0Pnhs4NnRs6N3Ru6NzwdqOhckPnhs4N
nRs6N3Ru6NzQuaFzQ+eGvxU0RG7o3NC5oXND54bODZ0bOjd0bujcMHc3RG7o
3NC5oXND54bODZ0bOjd0bujcsI++oXFD54bODZ0bOjd0bujc0Lmhc0PnhrG7
IXJD54bODZ0bOjd0bujc0Lmhc0Pnhrm7IXJD54bODZ0bOjd0bujc0Lmhc0Pn
hrm7IXJD54bODZ0bOjd0bujc0Lmhc0Pnhv3dDY0bOjd0bujc0Lmhc0Pnhs4N
nRs6N3RueL3RELmhc0Pnhs4NnRs6N3Ru6NzQuaFzw9zdELmhc0Pnhs4NnRs6
N3Ru6NzQuaFzw9zdELmhc0Pnhs4NnRs6NxbsbKkjXWupP13721OntdSCt7Dw
cqe11FK3MBH46YFwBDo3dG7oDAAAAAD/7xN4dbQj
     "], {{0, 234}, {360, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{360, 234},
   PlotRange->{{0, 360}, {0, 234}}], "}"}]], "Output",
 CellChangeTimes->{3.7712354898145957`*^9, 3.771235834321783*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"fbf21160-a82b-4e5b-a7ce-dac915101d55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"labels", "=", 
  RowBox[{"ImageDifference", "[", 
   RowBox[{
    RowBox[{"Binarize", "[", 
     RowBox[{
      RowBox[{"AlphaChannel", "[", 
       RowBox[{"Rasterize", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"10", ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Transparent"}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
         ",", 
         RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}], ",", 
      "0"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"rawAxes", "[", "1", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.771235595601485*^9, {3.771235719778929*^9, 3.771235736699267*^9}, {
   3.771235779216104*^9, 3.7712357839124646`*^9}, {3.771235839839682*^9, 
   3.7712358445429754`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"ca8369bb-1919-4f4e-896e-7df21a8f9744"],

Cell[BoxData[
 TemplateBox[{
  "ImageDifference","imginv",
   "\"Expecting an image or graphics instead of \\!\\(\\*RowBox[{\\\"{\\\", \
GraphicsBox[TagBox[RasterBox[NumericArray[List[List[1, 0, 34, 64, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 41, 1, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 69, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 28, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 35, 56, 0, 2, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 32, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 34, 66, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 33, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 34, 65, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 34, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 70, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 40, 1, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 58, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 42, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 54, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 46, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 50, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 49, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 49, 1, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 61, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 40, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 59, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 37, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 34, 63, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 33, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 35, 56, 0, 2, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 28, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 74, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 36, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 34, 62, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 38, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 59, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 41, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 55, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 44, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 55, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 55, 2, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 44, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 55, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 32, 41, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 33, 59, 0, 1, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 0, 31, 38, 0, 1, 1, 0, \
0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, \
0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], List[1, 0, 32, 61, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], List[1, 3, 37, 36, 8, 9, 19, \
12, 8, 11, 20, 8, 8, 15, 17, 8, 8, 30, 10, 8, 10, 20, 8, 8, 17, 14, 8, 8, 20, \
10, 8, 16, 27, 8, 8, 17, 15, 8, 9, 20, 8, 8, 12, 19, 9, 8, 37, 18, 8, 8, 20, \
9, 8, 15, 17, 8, 8, 18, 12, 8, 13, 40, 8, 8, 14, 17, 8, 8, 20, 10, 8, 12, 18, \
8, 7], List[1, 17, 78, 80, 51, 52, 64, 55, 51, 54, 65, 51, 51, 59, 61, 51, \
51, 68, 53, 51, 53, 65, 51, 51, 62, 58, 51, 51, 65, 53, 51, 57, 65, 51, 51, \
61, 59, 51, 52, 66, 51, 51, 55, 64, 51, 51, 66, 56, 51, 51, 66, 52, 51, 59, \
61, 51, 51, 63, 56, 51, 54, 68, 51, 51, 58, 62, 51, 51, 65, 53, 51, 56, 62, \
51, 40], List[0, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0], List[0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, \
1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, \
1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, \
1], List[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
0]], \\\"UnsignedInteger8\\\"], List[List[0, 48], List[75, 0]], List[0, 255], \
Rule[ColorFunction, GrayLevel]], BoxForm`ImageTag[\\\"Byte\\\", \
Rule[ColorSpace, \\\"Grayscale\\\"], Rule[Interleaving, None]], \
Rule[Selectable, False]], Rule[DefaultBaseStyle, \\\"ImageGraphics\\\"], \
Rule[ImageSizeRaw, List[75, 48]], Rule[PlotRange, List[List[0, 75], List[0, \
48]]]], \\\"}\\\"}]\\).\"",2,257,47,20817782642356972625,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771235600785511*^9, 3.7712357395266657`*^9, 
  3.771235786215124*^9, 3.771235846571843*^9},
 CellLabel->
  "During evaluation of \
In[257]:=",ExpressionUUID->"13ddfae2-3a8c-4b67-a76f-af86ddfb2a47"],

Cell[BoxData[
 RowBox[{"ImageDifference", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3E1qlDEAgOGJK6/hLdy6dFtP0ELVlcIoiFf2FE5xLK1YcZG8pvV5YPrL
hPRt+OikM3lx9fHi7bPD4fDp+enNxeWXV8fj5dc3N5+8/vD5+t318eXVzbe/
nW7vx+HWnQ9ZSOeGzo1x8q/n8D8QuaFzQ+eGzg2dGzo3dG7ovNj58YnOa407
N9bROeK6kbhdzzaSlnLdiLhupHRu6NzQuaFzQ+eGzg2dGzo3dG7Y3miI3NC5
oXND54bODZ0bOjd0bujc0Lmhc0Pnhm2khsoNnRs6N3Ru6NzQuaFzQ+eGzg2d
Gzo3PE+mIXJD54bODZ0bOjd0bujc0Hkxr+9OOK+gMaznhPXccJ5Mw3qOuD6n
dG7o3NC5oXND54bODZ0bOjd0btjeaIjc0Lmhc0Pnhs4NnRs6N3Ru6NzQuaFz
Q+eGfaSGyA2dGzo3dG7o3NC5oXND54bODZ0bOjfsbzREbujc0Lmhc0Pnhs4N
nRs6Lze8jr4wnFdQGM6FKDh/ozHOB8k4T2Y967mhc0fnhs4NnRs6N3Ru6NzQ
uaFzQ+eG7Y2GyA2dGzo3dG7o3NC5oXND54bODZ0bOjd0bthHaojc0Lmhc0Pn
hs4NnRs6N3Ru6NzQuaFzw/5GQ+SGzg2dGzo3dG7o3NC5ofNi58cnOq/l/I2O
zgnXjcSPws6TWWzce8ciP9exzg2dGzo3dG7o3NC5oXND54bODZ0bdjcaKjd0
bujc0Lmhc0Pnhs4NnRs6N3Ru6NzQueFpMg2RGzo3dG7o3NC5oXND54bODZ0b
Ojd0btjeaKjc0Lmhc0Pnhs4NnRs6N3RuTOq81TBbTWbuYFsNs9VkHhzsL76y
1Z22msyDv5zNZ/nYJvObOxH4w2+EFXRu6NzQGX4xZv3za8Y4kyYz7WeaZ9r5
bGPCMJMms+uZczPmNGYMM+YsxE077/OjzQq04XVj1lVjzFiLT/m6MW9C26zn
HTtPWYfnoSYM8WT/3gCAx+Y7XdANjw==
      "], {{0, 234}, {360, 0}}, {0, 1},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 234},
    PlotRange->{{0, 360}, {0, 234}}], ",", 
   RowBox[{"{", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt20FKAgEAhtGpVcuu0C3atmxrdAAlszYGGkQX7hpmWwtxMX2ZvAcKDoOM
36x+ZK5mL5PH82EY1hfbt8n07Wa1mr7fXW4/3C/Xz4vl/OF2+TpfzFfXs6/T
Pravp7Nhx2Zr9xjjE7mhc0Pnhs4NnRs6N3Ru6NzQubExCBMaN3Ru6NzQuaFz
Q+eGzg2dGzo3dG5Y3Q2VGzo3dG7o3NC5oXND54bODZ0b/oZtiNzQuaFzQ+eG
zg2dGzo3dG7o3LAHGyI3dG7o3NC5oXND54bODZ0bOjc8p9nQuKFzQ+eGzg2d
Gzo3dG7o3NC5YQ42RG7o3NC5oXND54bODZ0bOjd0btiDDZEbOjd0bujc0Lmh
c0Pnhs4NnRv2YEPkhs4NnRs6N3Ru6NzQuaFzQ+eG5wcbGjd0bujc0Lmhc0Pn
hs4NnRs6N8zBhsgNnRs6N3Ru6NzQuaFzQ+eGzg17sCFyQ+eGzg2dGzo3dG7o
3NC5oXPDHGyo3NC5oXND54bODZ0bOjd0bujc0LnhOc2Gxg2dGzo3dG7o3NC5
oXND54bODXOwIXJD54bODZ0bOjd0bujc0Lmhc8MebIjc0Lmhc0Pnhs4NnRs6
N3Ru6NywBxsiN3Ru6NzQuaFzQ+eGzg2dGzo3PD/Y0Lihc0Pnhs4NnRs6N3Ru
6NzQuWEONkRu6NzQuaFzQ+eGzg2dGzo3dG7Ygw2RGzo3dG7o3NC5oXND54bO
DZ0b9mBD5IbODZ0bOjd0bpxe53F+0dhdjumqTu9b9n3ftyNOOfCUfffmqC/8
n53yc+cNv+mge8DYdG7o3NAZAAAAAP7SJ8kdsCM=
       "], {{0, 230}, {360, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{360, 230},
     PlotRange->{{0, 360}, {0, 230}}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7711861731912603`*^9, 3.771235600812497*^9, 
  3.771235739550644*^9, 3.771235786246129*^9, 3.771235846613802*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"82630a29-54cb-4b02-968d-cc29c31aee10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"AlphaChannel", "[", 
   RowBox[{"Rasterize", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"list", ",", 
       RowBox[{"AxesStyle", "\[Rule]", "Transparent"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Antialiasing", "\[Rule]", "False"}], "}"}]}]}], "]"}], ",", 
     
     RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[374]:=",ExpressionUUID->"45ee757b-c197-4639-9b65-bcc6c1e54af2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt2z0KgnAcx2FrauwK3aK1sbXoAEX2shhYEJ23g5TNQQjFN8rnAQXBQT7D
H19+jlaH2aZfFMVx0Oxmy/OkrpeX+bA5WFTH/bYq19PqVG7Lerx6nHZttl2v
AAAAoFNujW9fQxfonKFzhs4AAAAAAAAAAAAAAMDP8mNEhs4ZOmfoDAAAAAAA
AAAAAABtmLzN0DlD5wydAQAAAAAAAACA9kwcZeicoXOGzgAAAAAAAADQZSYH
MnTO0DlDZwAAAAAAADJ8mcrQOUPnDJ0BAAAAgP/jzWeGzhk6Z+gMAAAA7/Bk
naFzhs4ZOgMA/Ag3bhk6Z+icoTPwzMqQofOnvC6p86fonKFkhs4AAAAAALRx
B8JrvPc=
    "], {{0, 227}, {360, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 227},
  PlotRange->{{0, 360}, {0, 227}}]], "Output",
 CellChangeTimes->{3.771186173328322*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"91aae3fd-b258-4fc5-bb65-5e784c2ec12c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"axes", "=", 
  RowBox[{"ImageSubtract", "[", 
   RowBox[{"rawAxes", ",", "data"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771187038885306*^9, 3.7711870465035477`*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"2125499f-4e34-4a02-ae56-58222edd7a03"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt20FKAgEAhlFr1bIrdIu2LdsaHcDIrI2BBtF5O8hk0HKoLPksfA8UZhhH
+XDzL+bs5nF6dzyZTNYnm7fp7PlitZq9XJ1uDq6X64fFcn57uXyaL+ar85v3
y143r/ujyahh/DQ7NgxKF1Ru6NzQuaFzQ+eGzg2dGzo3dG4Mg0VY0Lihc0Pn
hs4NnRs6N3Ru6NzQuWENNlRu6NzQuaFzQ+eGzg2dGzo3dG7Ygw2VGzo3dG7o
3NC5oXND54bODTuloXJD54bODZ0bOjd0bujc0Lmhc8NzbQ2NGzo3dG7o3NC5
oXND54bODZ0b1mBD5YbODZ0bOjd0bujc0Lmhc0Pnhj3YULmhc0Pnhs4NnRs6
N3Ru6NzQuWEPNlRu6NzQuaFzQ+eGzg2dGzo3dG54frChcUPnhs4NnRs6N3Ru
6NzQuaFzwxpsqNzQuaFzQ+eGzg2dGzo3dG7o3LAHGyo3dG7o3NC5oXND54bO
DZ0bOjfswYbKDZ0bOjd0bujc0Lmhc0Pnhs4Nzw82NG7o3NC5oXND54bODZ0b
Ojd0bliDDZUbOjd0bujc0Lmhc0Pnhs4NnRv2YEPlhs4NnRs6N3Ru6NzQuaFz
Q+eGPdhQuaFzQ+eGzg2dGzo3dG7o3PBcW0Pjhs4NnRs6N3Ru6NzQuaFzQ+eG
NdhQuaFzQ+eGzg2dGzo3dG7o3NC5YQ82VG7o3NC5oXND54bODZ0bOjd0btiD
DZUbOjd0bujc0Lnxm87/8bP7+uJ9/Z8PvPNWhzu81Q4P/8zv+PG1Om/1Oz7O
fu3zy755k8Mznnv0LLumc0Pnhs4AAAAAsB9vJhiYOA==
    "], {{0, 227}, {360, 0}}, {0,
     255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 227},
  PlotRange->{{0, 360}, {0, 227}}]], "Output",
 CellChangeTimes->{3.771187047841881*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"e55d8864-a1ce-4c0d-b621-1f1d9634fddd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"background", "=", 
  RowBox[{"ColorNegate", "[", 
   RowBox[{"ImageAdd", "[", 
    RowBox[{"axes", ",", "labels", ",", "data"}], "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[375]:=",ExpressionUUID->"186befea-4a0f-4be1-bba1-6d6bdcc36e96"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U1u00AAQOGBFUuuwC3YsmRbxAFakRY2QUqREOflICH/SWmaxjOeN+OZ
90lENNTYfnVtj5ppPtz9vLl/G0J4fLd6uLn9/WmxuP3z5f3qg6/zxx8P89m3
z/Nfs4fZ4uPd+tP+rv58fxPC8oyzT2p04Xx+jczKDDsz7Mywcxbh6YOd81jf
XIS1zePmmdKb1KJw6BzsnNHuQF7uj+ilnccTToYim7z7p+w8qlc6B0eE4/iv
s+fnTOxcyjZwOP5d2dmZYWeGnRl2ZtiZYWeGo0GGlRl2ZtiZYWeGnRl2ZtiZ
YWeGnRmOBxlWZtiZYWeGnRl2ZtiZYWeGnRmOUxhWZtiZYWeGnRl2zic8e1QG
h/mDzgMaZOBMnmDnODGdw27mlZ2vF9fZeW1DpXXOtVXd25+cPT/n5XWQcjpD
084MOzPszLAzw84MOzMcDTKszLAzw84MOzPszLAzw84MOzPszHA8yLAyw84M
OzPszLAzw84MOzPszLAzw/Egw8onMr5G2c4n7MywM8POk+T8QYSv50cc33fJ
zjk5f5Dh/EHG4c1hPZ6z8vzMcP4gxfmDPDsz7MywM8PODDszHA0yrMywM8PO
DDsz7MywM8PODDsz7MzobDxY7KehXVW2M8XODDs3zs4MOzPszLAzw86MzsaD
xViZYWeGnRl2zsjX5SJ8nTnC1/MznNeG8P3aGM4fZDivDeN1EOT9M8nODDsz
mutc6f1TjduUxM4MOzNq7VzlVrXHygw7M+zMsDPDzgw7M+zMsDPDzgzHgwwr
M+zMsDPDzgw7M+zMsDNjgp0r/cnUZdPb4ol2nt42T7Nz6Q0Yzs56kZ0Zds7H
98Uj+D41DOenMA4Hs50zc14bwnmaiPDkOLZzLl4HWd4/k+zMsDOjys4N3mtW
uT92ZrTYucY9arFz6Q3ohJ0ZdmbYmWFnhp0ZdmbYmWFnRnsjrzoVqtzgyPoy
OzPszLAzo6+9LcfODDsz7MywM6O3634puSp3d+P2Cjsz7MywM8MYjJTOU1y2
1IrjF007M3TeecCHzzrH/1ejfljNdlz9uZdL2vmqzkGZnM999tnjl+LCP2sA
OzMMybBz9dJOKpO7997uLn9cpp2945d9+Zp+5cLRiyauO3a1ifubtGJ82e2C
RTonxEo9JAt1DvvfDoOK39/kb32+8+7ASr0qRa03bXcT9xdfcaHOyYdkmc7x
J7tJXgcL3W8kfn07+21SSffPiZn6qSxJ7fkHYN61IA==
    "], {{0, 227}, {360, 0}}, {0,
     255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{360, 227},
  PlotRange->{{0, 360}, {0, 227}}]], "Output",
 CellChangeTimes->{3.771186173373631*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"487adccf-eb18-4faf-a169-9f7f2e70f5ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"ImageMultiply", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"background", ",", "axes", ",", "labels", ",", "data"}], 
        "}"}], ",", "\"\<Real32\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[376]:=",ExpressionUUID->"5285d93b-fa74-44bc-9659-2c388489c1ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztycEJgDAAA8DqQ1zDFXQCV9AJKig+CoI+xHldxHYO7yCBkG45pq0OIVxt
rine43nGZ27KWGMa+lTON2evAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAD82geSmAlN
      "], {{0, 227}, {360, 0}}, {0., 1.},
      
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 227},
    PlotRange->{{0, 360}, {0, 227}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2zFKA0EAhtHVQryGV9ADiFeIJ4hgsAgIsRA77+pFzBbCdhZhyUfmPRgh
yCRM83X/3cv7Znc9TdPH7fHPZvv5dDhsv55v5g+v2/3D/X7+58/xvF1NK/h+
XONbATjV3Oe/A0CHLgM06TNAkz4DNOkzQJM+AzTpM0CTPgM06TNAkz4DNC33
g3aEAB16DNCkzwBN+gzQpM8ATfoM0KTPAE36DNCkzwBN+gzQZDcI0KTLAE36
DNCkzwBN+gzQpM8ATfoM0KTPAE36DNCkzwBN9oMATboM0KTPAE36DNCkzwBN
+gzQpM8ATfoM0KTPAE32KQBNugzQpM8ATfoM0KTPAE36DNCkzwBN+gzQpM8A
TfoM0LTcD9oRAnToMUCTPgM06TNAkz4DNOkzQJM+AzTpM0CTPgM06TNAk90g
QJMuAzTpM0CTPgM06TNAkz4DNOkzQJM+AzTpM0CTPgM02Q8CNOkyQJM+AzTp
M0CTPgM06TNAkz4DNOkzQJM+AzTpM0CT/SBAky4DNOkzQJM+AzTpM0CTPgM0
6TNAkz4DNOkzQJM+AzQt94N2hAAdegzQpM8ATfoM0KTPAE36DNCkzwBN+gzQ
pM8ATfoM0GQ3CNCkywBN+gzQpM8ATfoM0KTPAE36DNCkzwBN+gzQpM8ATfaD
AE26DNCkzwBN+gzQpM8ATfoM0KTPAE36DNCkzwBN+gzQZD8I0KTLAE36DNCk
zwBN+gzQpM8ATfoM0KTPAE36DNCkzwBNy/2gHSFAhx4DNOkzQJM+AzTpM0CT
PgM06TNAkz4DNOkzQJM+AzTZDQI06TJAkz4DNOkzQJM+AzTpM0CTPgM06TNA
kz4DNOkzQJP9IECTLgM06TNAkz4DNOkzQJM+AzTpM0CTPgM06TNAkz4DNNkP
AjTpMkCTPgM06TNAkz4DNOkzQJM+AzTpM0CTPgM0LfcpdioAHXoM0KTPAE36
DNCkzwBN+gzQpM8ATfoM0KTPAE36DNBkNwjQpMsATfoM0KTPAE36DNCkzwBN
+gzQpM8ATfoM0KTPAE32gwBNugzQpM8ATfoM0KTPAE36DNCkzwBN+gzQpM8A
TfoM0GQ/CNCkywBN+gzQpM8ATfoM0KTPAE2j9dl7L9to752N9uaR3jvSW2fe
e9lGe+9stDeP9N5T3uquu+6e/7fd7d89x2+666675/9td/t3//tex3EcZ72z
VrsB6NFngCZ9BmjSZwAAAAAAAAAAAAAAAAAAAAAAAIBL9As18PmD
      "], {{0, 227}, {
      360, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 227},
    PlotRange->{{0, 360}, {0, 227}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2VFq1FAUBuCjD+I23IJu4HcLdQUVFB8KQn0Q1+tGbMHiNL1JGyQ3Mzff
B/8w9+Q+3MOEQ8i8+/z96uvrqvrx9u7j6vrnx9vb61+f3twvvlzffHh/c3/x
912+vSoAAAAAAAAAAM5L/qMGwDZSj+duGmnVAdhO6mXzuRUAtpOaf0aeruf2
ALCN1NPZO702VwdgOynzGeAcpbx/BjhHKfMZ4JJkptaqAwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAb1lZB2B7maRVSwHQ
UxpZqgPQR55JlfkMsIcsZLoHgH6ykOkeAPpJLb9zTpnPAHtII0t1APpKtWdw
qwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AL1lZR2A7WWSVi0FQE9ZEQD6yTOpMp8B9pCFTPcA0E9q/p1zaw8AfWRFAOgn
jSzVAegr1Z7BrRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADA6PLCGgD95CTT9WkdgH5S5jPAOcpCqsxngD1kIdM9APSThUz3
ANBPVgSAfaT8PwhwKbL3AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA4E5W1gHYVhpZqgPQR1YEgH5Szz8zn34HoK80Mr0G
QF+ZyfQ6AP2k2vM3jQDQT1YEgPORvQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAZvI3R5O9D9BR
9j5AZ9n7AJ2k2r22alyeTHIUqWP0m0ZGlzpOv6nHPaYRLlNmMrrUMXt9yMjS
yIhS7R6n9dNrXJbUv98vdYzfM3WcXu+lkZGlkRGlnvY4t+aypca/n++lkdGl
kZGlkZGl5ufxdM3lSR3vXp5mZKljPU9lJqNKmc+jSh3jHn6QmYwsdcz5fPo9
zZ1jSHn/PKrM5AhSx+g1jYwsjYwsZT7DpcveB+gsdbyeT2XvAwAAAAAAwNb+
ALaKlE0=
      "], {{0, 227}, {360, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 227},
    PlotRange->{{0, 360}, {0, 227}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt3b0JwmAYhdFoIa7hCrrA6wo6QQTFIiBoIc7rImr5NTYKXvUcuIGQ/ilC
fmabw2o37rruNL0fVv15eTz2l/XkcbLth8V8eFy83rcfdQAAAAAAAAAAAAAA
AADAV6lqB0AGfQbIpM8AmfQZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACAX1fVDoAM+gyQSZ8BMukzAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkKaqHQAZ9Bkgkz4D
ZNJnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgW1S1AyCD
PgNk0meATPoMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+jqh0A
GfQZIJM+A2TSZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACATP4zBZBJnwEy
6TNAJn0GAAAAAAAAAAAAAAAAAAAAAAAAAIDX+c4nQCZ9BsikzwCZ9BkAAAAA
AAAAAAAAAAAAAPg33rMGyKTPAJn0GSCTPgMAAAAAAAAAAJDKM24AmfQZIJM+
A2TSZwAAAOBd3GcAyKTPAM99qpP6DPCcPgNk0kmATPoMAAAAAAAAAAAAAAAA
AAAAAAAAAAAAZLkBmOlhTQ==
      "], {{0, 227}, {360, 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{360, 227},
    PlotRange->{{0, 360}, {0, 227}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7711861733830223`*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"200ef691-4f14-4a86-ab30-356338d47a47"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"segmentation", "=", 
  RowBox[{
   RowBox[{"ImageData", "[", 
    RowBox[{"ImageAdd", "@@", 
     RowBox[{"MapThread", "[", 
      RowBox[{"ImageMultiply", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Image", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"background", ",", "axes", ",", "labels", ",", "data"}], 
            "}"}], ",", "\"\<Real32\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
      "]"}]}], "]"}], "//", "Round"}]}]], "Input",
 CellLabel->
  "In[377]:=",ExpressionUUID->"5bcaffca-a553-4716-b2a4-9315b9345daf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinMax", "[", "segmentation", "]"}]], "Input",
 CellLabel->
  "In[378]:=",ExpressionUUID->"47de8f25-3f16-4360-9489-d1cfab2d4702"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.771186282806952*^9},
 CellLabel->
  "Out[378]=",ExpressionUUID->"7c45f8d0-0a55-448b-9461-1dc6d62705f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"trainingset", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "1.9"}], ",", 
    RowBox[{"2", "\[Rule]", "4.1"}], ",", 
    RowBox[{"3", "\[Rule]", "6.0"}], ",", 
    RowBox[{"4", "\[Rule]", "8.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771186714698326*^9, 
  3.771186720933106*^9}},ExpressionUUID->"5fe8f77b-2f78-4f9c-a188-\
a108b20f672e"],

Cell[BoxData[
 RowBox[{"testset", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"3", "\[Rule]", "6.0"}], ",", 
    RowBox[{"4", "\[Rule]", "8.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.771186786603318*^9, 
  3.771186800417362*^9}},ExpressionUUID->"0096055a-577d-48a9-b67a-\
743bb650587c"],

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{
    RowBox[{"LinearLayer", "[", "]"}], ",", "trainingset", ","}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771186725462811*^9, 
  3.771186731669359*^9}},ExpressionUUID->"3b029435-63e6-4e8c-bbda-\
f95e12a508e5"]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 149, 3, 96, "Title",ExpressionUUID->"414d67d3-ca72-4723-ac3f-3c60e3f177a1"],
Cell[CellGroupData[{
Cell[754, 29, 374, 10, 28, "Input",ExpressionUUID->"b77342b3-67b8-428c-8ff5-9493e741d338"],
Cell[1131, 41, 1251, 28, 32, "Output",ExpressionUUID->"4a6cc206-90a0-4cb5-b6fe-696fb6943b4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2419, 74, 484, 13, 28, "Input",ExpressionUUID->"8fe20170-cc97-4cb3-99e1-1e7a9818dcc4"],
Cell[2906, 89, 10409, 237, 223, "Output",ExpressionUUID->"82f62b6f-f699-4cd8-9a04-44f4c56c3594"]
}, Open  ]],
Cell[13330, 329, 407, 9, 28, "Input",ExpressionUUID->"be0850ba-4596-4b21-a6c2-c950c6ba52fc"],
Cell[CellGroupData[{
Cell[13762, 342, 376, 8, 28, "Input",ExpressionUUID->"3b47ece3-4bf4-46a7-a5a8-cc7816a1f49a"],
Cell[14141, 352, 2988, 54, 251, "Output",ExpressionUUID->"f6b4d7d8-d12d-4130-ad25-e057e3ae55c7"]
}, Open  ]],
Cell[17144, 409, 700, 21, 28, "Input",ExpressionUUID->"c62ea07c-ad59-43a0-9cc0-9054ac01a0b6"],
Cell[17847, 432, 230, 5, 28, "Input",ExpressionUUID->"e099c19a-b4d7-480c-8837-f9c6155ac897"],
Cell[CellGroupData[{
Cell[18102, 441, 320, 7, 28, "Input",ExpressionUUID->"9324b2b3-bf1e-4839-9477-9ab1a5bd3957"],
Cell[18425, 450, 2987, 54, 249, "Output",ExpressionUUID->"3af3040c-f3a7-43ce-8447-62961c0b0e93"]
}, Open  ]],
Cell[21427, 507, 209, 5, 28, "Input",ExpressionUUID->"a176d516-1bcd-430e-b6e7-30949896ebfc"],
Cell[21639, 514, 1053, 23, 28, "Input",ExpressionUUID->"0d46dec9-a437-4c86-9be6-4f10cbcd08e1"],
Cell[22695, 539, 883, 23, 28, "Input",ExpressionUUID->"c458672b-42e1-4d43-a95a-a907f05eb7f4"],
Cell[23581, 564, 1055, 26, 67, "Input",ExpressionUUID->"5f5f4a57-4053-43d3-8ea2-7fa7984d2ef3"],
Cell[24639, 592, 747, 19, 28, "Input",ExpressionUUID->"f88589b5-30c0-4db7-b385-d1b319ce0b9c"],
Cell[25389, 613, 241, 6, 28, "Input",ExpressionUUID->"9b9d0174-b999-4145-be88-5bf2ee0888d4"],
Cell[25633, 621, 239, 6, 28, "Input",ExpressionUUID->"1694d014-26da-4360-9367-b2068eda6747"],
Cell[25875, 629, 2269, 56, 86, "Input",ExpressionUUID->"b9cfbbbf-3c53-40c7-bad7-1a5d95b7e3d2"],
Cell[28147, 687, 5163, 116, 200, "Input",ExpressionUUID->"e2a74a9a-bee6-4641-99bd-f0dd93609935"],
Cell[CellGroupData[{
Cell[33335, 807, 848, 23, 67, "Input",ExpressionUUID->"5a29629d-1874-4a8a-8f7e-259fd9ecfbee"],
Cell[34186, 832, 13403, 291, 170, "Output",ExpressionUUID->"516af9d9-8fb3-4018-8058-a9503a819bda"]
}, Open  ]],
Cell[47604, 1126, 379, 10, 28, "Input",ExpressionUUID->"ba544e41-d328-4eeb-8010-a73a8cd135f7"],
Cell[CellGroupData[{
Cell[48008, 1140, 1247, 25, 72, "Input",ExpressionUUID->"2bae5711-2426-4d96-a341-263dc2f860ce"],
Cell[49258, 1167, 17677, 346, 264, "Output",ExpressionUUID->"fa6a7fc3-c884-4f9c-81f8-5012ae28697e"]
}, Open  ]],
Cell[66950, 1516, 376, 9, 28, "Input",ExpressionUUID->"d226fddb-fcf1-4ff5-bcc8-7211e14b319e"],
Cell[CellGroupData[{
Cell[67351, 1529, 1438, 31, 72, "Input",ExpressionUUID->"5238342f-7796-4850-bb67-8872691ca94c"],
Cell[68792, 1562, 63122, 1289, 389, "Output",ExpressionUUID->"2957b452-420d-4807-8cdd-f6bc8f9b5dd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131951, 2856, 153, 3, 28, "Input",ExpressionUUID->"1d1df914-63cd-433d-98bc-f99c48cd7b74"],
Cell[132107, 2861, 420, 8, 32, "Output",ExpressionUUID->"738a099b-e227-4d96-944a-fa4cbf5cb6ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132564, 2874, 155, 3, 28, "Input",ExpressionUUID->"ec7ede10-9fbc-4f22-82ef-0e95140614d2"],
Cell[132722, 2879, 2341, 43, 251, "Output",ExpressionUUID->"869d67b6-8f20-4d1d-af58-931cf1bfafc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135100, 2927, 225, 5, 48, "Input",ExpressionUUID->"409c7e12-da1d-4d1c-b6ac-5ea88b2d74fb"],
Cell[135328, 2934, 9023, 232, 92, "Output",ExpressionUUID->"8141d86f-a78c-4a7c-b6f5-a3c9e4beff39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144388, 3171, 85, 0, 67, "Section",ExpressionUUID->"e5e26a7e-2773-4870-baf0-c42ad86a191b"],
Cell[CellGroupData[{
Cell[144498, 3175, 495, 14, 28, "Input",ExpressionUUID->"5cc019fc-b545-452c-9be4-06092a2100b1"],
Cell[144996, 3191, 3011, 54, 243, "Output",ExpressionUUID->"9a89b900-a008-43e3-baac-9cc980f831dc"]
}, Open  ]],
Cell[148022, 3248, 187, 4, 28, "Input",ExpressionUUID->"372f549b-3677-4a9f-b94f-6e953955914e"],
Cell[CellGroupData[{
Cell[148234, 3256, 674, 21, 28, "Input",ExpressionUUID->"0ad60a85-78e5-4a4c-8b1e-7341c6fc1596"],
Cell[148911, 3279, 675, 21, 32, "Output",ExpressionUUID->"2b0189bd-99c2-45eb-9785-96b1f97fe074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149623, 3305, 176, 4, 28, "Input",ExpressionUUID->"4d422bd6-f3bb-4d77-971b-c61deb55bd28"],
Cell[149802, 3311, 3708, 76, 243, "Output",ExpressionUUID->"86d377bd-9819-4f99-a181-ea350d06f459"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153547, 3392, 327, 7, 28, "Input",ExpressionUUID->"641de11d-0658-4524-aa6f-cf6ae7c5a3d5"],
Cell[153877, 3401, 15960, 379, 132, "Output",ExpressionUUID->"3dffc010-742a-4162-acfe-0809381d9628"]
}, Open  ]],
Cell[169852, 3783, 901, 19, 239, "Input",ExpressionUUID->"5f3c7f77-85ce-459c-8d79-8e535ff9c9ff"],
Cell[170756, 3804, 1097, 22, 239, "Input",ExpressionUUID->"5b90bddb-368e-49c2-9fc2-e5e07903a85e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171902, 3832, 166, 3, 96, "Title",ExpressionUUID->"500af9c7-75c4-4bee-b421-d43cb315a3b1"],
Cell[CellGroupData[{
Cell[172093, 3839, 198, 4, 28, "Input",ExpressionUUID->"179a197b-21d7-4e86-b66c-f82059d8c763"],
Cell[172294, 3845, 607, 12, 39, "Message",ExpressionUUID->"6ba3eb7f-169d-4f67-a055-35386b522e55"],
Cell[172904, 3859, 449140, 9107, 382, "Output",ExpressionUUID->"950ecbdf-fe1e-484f-b4ff-a65d9ae844e2"]
}, Open  ]],
Cell[622059, 12969, 866, 24, 28, "Input",ExpressionUUID->"3f4a535b-d977-449d-8c40-826b093c07d8"],
Cell[CellGroupData[{
Cell[622950, 12997, 283, 6, 28, "Input",ExpressionUUID->"1d42d871-276f-4851-bf7c-b4915aa60f1b"],
Cell[623236, 13005, 27726, 495, 280, "Output",ExpressionUUID->"62e49baf-394c-4515-9866-2c4efb24e9e3"]
}, Open  ]],
Cell[650977, 13503, 128, 3, 28, "Input",ExpressionUUID->"55a7ea75-ba07-4960-aa3c-6343519fa075"],
Cell[651108, 13508, 1047, 26, 28, "Input",ExpressionUUID->"cb79382a-84c6-4d8a-886d-7f3c90ced549"],
Cell[CellGroupData[{
Cell[652180, 13538, 235, 5, 28, "Input",ExpressionUUID->"422083ca-73b0-4dbc-a697-0c523bc4b63c"],
Cell[652418, 13545, 1361, 27, 136, "Output",ExpressionUUID->"fbf21160-a82b-4e5b-a7ce-dac915101d55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653816, 13577, 1148, 29, 67, "Input",ExpressionUUID->"ca8369bb-1919-4f4e-896e-7df21a8f9744"],
Cell[654967, 13608, 12449, 161, 58, "Message",ExpressionUUID->"13ddfae2-3a8c-4b67-a76f-af86ddfb2a47"],
Cell[667419, 13771, 2857, 56, 111, "Output",ExpressionUUID->"82630a29-54cb-4b02-968d-cc29c31aee10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670313, 13832, 538, 14, 28, "Input",ExpressionUUID->"45ee757b-c197-4639-9b65-bcc6c1e54af2"],
Cell[670854, 13848, 847, 19, 244, "Output",ExpressionUUID->"91aae3fd-b258-4fc5-bb65-5e784c2ec12c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671738, 13872, 276, 6, 28, "Input",ExpressionUUID->"2125499f-4e34-4a02-ae56-58222edd7a03"],
Cell[672017, 13880, 1315, 27, 244, "Output",ExpressionUUID->"e55d8864-a1ce-4c0d-b621-1f1d9634fddd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673369, 13912, 261, 6, 28, "Input",ExpressionUUID->"186befea-4a0f-4be1-bba1-6d6bdcc36e96"],
Cell[673633, 13920, 1742, 34, 244, "Output",ExpressionUUID->"487adccf-eb18-4faf-a169-9f7f2e70f5ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675412, 13959, 486, 14, 28, "Input",ExpressionUUID->"5285d93b-fa74-44bc-9659-2c388489c1ac"],
Cell[675901, 13975, 5191, 104, 133, "Output",ExpressionUUID->"200ef691-4f14-4a86-ab30-356338d47a47"]
}, Open  ]],
Cell[681107, 14082, 665, 18, 28, "Input",ExpressionUUID->"5bcaffca-a553-4716-b2a4-9315b9345daf"],
Cell[CellGroupData[{
Cell[681797, 14104, 153, 3, 28, "Input",ExpressionUUID->"47de8f25-3f16-4360-9489-d1cfab2d4702"],
Cell[681953, 14109, 198, 5, 32, "Output",ExpressionUUID->"7c45f8d0-0a55-448b-9461-1dc6d62705f1"]
}, Open  ]],
Cell[682166, 14117, 384, 10, 28, "Input",ExpressionUUID->"5fe8f77b-2f78-4f9c-a188-a108b20f672e"],
Cell[682553, 14129, 294, 8, 28, "Input",ExpressionUUID->"0096055a-577d-48a9-b67a-743bb650587c"],
Cell[682850, 14139, 294, 8, 28, "Input",ExpressionUUID->"3b029435-63e6-4e8c-bbda-f95e12a508e5"]
}, Open  ]]
}
]
*)

